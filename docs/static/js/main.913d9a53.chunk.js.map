{"version":3,"sources":["utils/data.ts","../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","theme/colors.js","hooks/useCursor.ts","commands/navigate.ts","components/Link.tsx","context/context.tsx","components/CensusAcademyFooter.tsx","components/Chrome.tsx","components/View.tsx","components/Header.tsx","pages/SignIn.tsx","pages/Landing.tsx","pages/Gems.tsx","pages/Gem.tsx","pages/UserDashboard.tsx","pages/About.tsx","pages/Courses.tsx","pages/CourseOverview.tsx","pages/Course.tsx","pages/Error404.tsx","components/Provider.tsx","components/Breadcrumbs.tsx","components/Sign.tsx","components/courses/CourseHome.tsx","components/courses/CourseModule.tsx","components/courses/CourseSubmodule.tsx","App.js","aws-exports.js","graphql/queries.js","router/router.ts","index.tsx","utils/index.js"],"names":["log","console","convert_assets_to_object","assets","type","name","content","index","use_index","reduce","a","c","key","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","primary_color","secondary_color","tertiary_color","muted_color","accent_color","atom","NAV","registerCMD","cmd_nav","Link","href","style","children","path","onClick","target","currentTarget","curr","document","preventDefault","run$","next","args","default_context","$store$","parse","URL2obj","window","location","authState","user","CTX","createContext","LinkCol","styled","Col","SeparatedLinks","ColorSpan","span","FooterSeparator","hr","VisionStatement","p","CensusAcademyFooter","Content","Layout","Footer","Chrome","authUser","useState","setAuthState","setUser","useEffect","onAuthUIStateChange","nextAuthState","authData","className","padding","marginTop","width","textAlign","fontWeight","minHeight","Provider","value","background","useCursor","uid","Date","now","state","setState","cursor","Cursor","addWatch","bfr","aft","View","useContext","K","Page","pageCursor","loading","loadingCursor","pathCursor","useLayoutEffect","release","store","deref","loader","data","length","getIn","HEADER","Header","SignedIn","AuthState","ConfirmSignIn","ConfirmSignUp","CustomConfirmSignIn","ForgotPassword","Loading","ResetPassword","SettingMFA","SignIn","SignOut","SignUp","SignedOut","SigningUp","TOTPSetup","VerifyContact","VerifyingAttributes","confirmingSignInCustomFlow","confirmingSignUpCustomFlow","position","zIndex","theme","mode","defaultSelectedKeys","Item","src","process","alt","marginLeft","required_fields","placeholder","required","label","slot","formFields","Wrapper","div","StyledButton","Button","StyledHero","HeroHeader","h1","HeroSubHeading","h2","SectionHeader","SectionText","Landing","lg","md","sm","color","Image","img","GemWrapper","GemCardHeader","GemDate","DataGemCard","image","title","date","link","SectionHeading","Gems","URL_PATH","items","marginBottom","gutter","item","createdAt","formattedDate","Intl","DateTimeFormat","year","month","day","format","parts","split","cover","body","Card","Meta","ContentHeading","DateText","Gem","T_BODY","T_OG_TITLE","A_VIDEO","unified","use","remark2react","processSync","result","pop","margin","videoId","mockData","coursesAndChallenges","gems","webinars","description","ProfilePicture","ProfileHeader","ProfileDescription","StyledCard","LinkStyles","backgroundColor","borderRadius","CenteredWrapper","ImageWrapper","CourseCard","WebinarDate","WebinarCard","UserDashboard","setUserNode","node","read","username","res","fetchAccountNode","i","display","webinar","flex","gem","VideoContainer","YoutubePlayer","iframe","CallToActionBox","CallToActionHeader","fontSize","HeaderOne","HeaderTwo","BodyText","About","CourseWrapper","CourseCardHeader","float","Courses","b","StyledParagraph","StyledSpan","CourseInfo","CourseOverview","T_OG_DESCRIPTION","courseId","Sider","Course","Menu","SubMenu","displayComponent","modules","submodules","prev","courseTitle","courseDescription","moduleTitle","moduleDescription","submodule","maxHeight","maxWidth","Error404","status","subTitle","extra","CFG","router","knowns","values","prfx","diff_keys","escRGX","RGX","RegExp","replace","registerRouterDOM","swap","x","Breadcrumbs","textTransform","crumb","SignInButton","SignOutButton","Auth","signOut","Hub","dispatch","event","message","Panel","Collapse","StyledTitle","CourseDescription","bottom","CourseHome","header","SectionTitle","SectionWrapper","StyledItem","li","CourseModule","StyledHeader","CourseSubmodule","toNode","fromNode","HUB","stream","sub$","payload","src$","work","history","back","out$","topics","entries","App","setAuthUser","update","AS","currentAuthenticatedUser","listen","remove","awsmobile","aws_project_region","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","oauth","aws_cloud_logic_custom","endpoint","region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","aws_user_files_s3_bucket","aws_user_files_s3_bucket_region","getNodesByType","API","NodeType","getNodeByID","getConnectedNodes","CRUD","utils","dummy_query","query","variables","authMode","GRAPHQL_AUTH_MODE","API_KEY","publicQuery","routerCfg","url","Credentials","session","match","URL_DOMN","URL_FULL","URL_HASH","URL_QERY","URL_SUBD","URL_DATA","DOM_HEAD","DOM_BODY","URL_PAGE","gems_path","slice","courses_path","RES","EquivMap","queries","A_GEM","NodeStatus","DRAFT","og_description","nodesByStatusType","getNode","updatedAt","owner","C_COURSES","courseNodeInfo","connections","edgeType","EdgeType","HAS_PART","moduleId","moduleNodeInfo","HAS_CHILD","connectedNodes","edges","filter","edge","nodes","list","get","page","DATA","PAGE","INJECT_HEAD","cmd_inject_head","configureWith","awsconfig","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.913d9a53.chunk.js","sourcesContent":["//import { getIn, setIn } from \"@thi.ng/paths\"\r\nimport { isPlainObject, isArray } from \"@thi.ng/checks\"\r\nimport { getIn } from \"@thi.ng/paths\"\r\n\r\nexport const log = console.log\r\nexport const json = arg => JSON.stringify(arg, null, 2)\r\nexport const JL = arg => log(json(arg))\r\n\r\nexport const isEmpty = coll =>\r\n    isPlainObject(coll) && !Object.keys(coll).length\r\n        ? true\r\n        : isArray(coll) && !coll.length ? true : false\r\n\r\n/**\r\n * @example\r\n *\r\n * const coll = {\r\n *     one: 1,\r\n *     two: 2,\r\n *     three: [\r\n *         { a: 111, b: \"🤞\", c: \"🕗\" },\r\n *         { a: 333, b: \"😻\", c: \"🍑\" },\r\n *     ],\r\n *     four: {\r\n *         five: [\r\n *             {\r\n *                 id: 6,\r\n *                 bloop: \"blop\",\r\n *             },\r\n *             {\r\n *                 id: 7,\r\n *                 bloop: \"poop\",\r\n *             },\r\n *         ],\r\n *     },\r\n * }\r\n *\r\n *collapse(coll)\r\n * // => {\r\n *     \"one\": 1,\r\n *     \"two\": 2,\r\n *     \"three/0/a\": 111,\r\n *     \"three/0/b\": \"🤞\",\r\n *     \"three/0/c\": \"🕗\",\r\n *     \"three/1/a\": 333,\r\n *     \"three/1/b\": \"😻\",\r\n *     \"three/1/c\": \"🍑\",\r\n *     \"four/five/0/id\": 6,\r\n *     \"four/five/0/bloop\": \"blop\",\r\n *     \"four/five/1/id\": 7,\r\n *     \"four/five/1/bloop\": \"poop\"\r\n *  }\r\n */\r\nexport const collapse = (coll, sep = \"/\", crumbs = [], acc = {}) => {\r\n    //log({ coll })\r\n    coll = coll === null ? {} : coll\r\n    Object.entries(coll).forEach(\r\n        ([ key, val ]) =>\r\n            isArray(val) || isPlainObject(val)\r\n                ? collapse(val, sep, [ ...crumbs, key ], acc)\r\n                : (acc[[ ...crumbs, key ].join(sep)] = val),\r\n    )\r\n    return acc\r\n}\r\n/**\r\n * when all last key qualifiers are unique, this function\r\n * removes unnecessarily specific keys\r\n *\r\n * @example\r\n *\r\n * const coll = {\r\n *    \"one\": 1,\r\n *    \"two\": 2,\r\n *    \"three/0/a\": 111,\r\n *    \"three/0/b\": \"🤞\",\r\n *    \"three/0/c\": \"🕗\",\r\n *    \"three/1/a\": 333,\r\n *    \"three/1/b\": \"😻\",\r\n *    \"three/1/c\": \"🍑\",\r\n *    \"four/five/0/id\": 6,\r\n *    \"four/five/0/bloop\": \"blop\",\r\n *    \"four/five/1/id\": 7,\r\n *    \"four/five/1/bloop\": \"poop\"\r\n * }\r\n *\r\n * prune(coll)\r\n * // => { one: 1, two: 2, a: 333, b: '😻', c: '🍑', id: 7, bloop: 'poop' }\r\n */\r\nexport const prune = (coll, sep = \"/\", acc = {}) => {\r\n    Object.entries(coll).forEach(([ k, v ]) => {\r\n        const key = k.split(sep).slice(-1).join(\"\")\r\n        acc[key] = v\r\n    })\r\n    return acc\r\n}\r\n\r\nexport const diff = [\r\n    () => ({}),\r\n    acc => acc,\r\n    (acc, cur) => {\r\n        //log({ acc, cur })\r\n        const { created_at: c_a } = acc\r\n        const { created_at, ...rest } = cur\r\n        const time_acc = new Date(c_a).getTime()\r\n        const time_cur = new Date(created_at).getTime()\r\n        const days_gap = Math.abs((time_cur - time_acc) / (1000 * 3600 * 24))\r\n\r\n        return {\r\n            days_gap: isNaN(days_gap) ? null : days_gap > 30 ? 30 : ~~days_gap,\r\n            created_at,\r\n            ...rest,\r\n        }\r\n    },\r\n]\r\n\r\n/*\r\n{acc: {…}, cur: {…}}\r\nacc:\r\ncode: \"USCENSUS_292\"\r\ncreated_at2: undefined\r\ndays_gap: NaN\r\nengagement_rate: NaN\r\nname: \"Economic Studies\"\r\ntopic_id: \"73957\"\r\nSymbol(vega_id): 18737\r\n__proto__: Object\r\ncur:\r\ncode: \"USCENSUS_292\"\r\nengagement_rate: NaN\r\nname: \"Economic Studies\"\r\ntopic_id: \"73957\"\r\n__proto__: Object\r\n*/\r\n//diff[2](\r\n//    { created_at: \"2018-05-10T13:14:15.000Z\" },\r\n//    { created_at: \"2013-10-24T13:02:00.000Z\" }\r\n//) //?\r\n\r\n/**\r\n * @example\r\n * let test = [{a:1, b:2, c:3}, {a:2, b:5, c:9}, {a:1, b:4, c:6}]\r\n *\r\n * collect_by_path([\"a\"], test) //?\r\n *\r\n * { 1: [{a:1, b:2, c:3}, {a:1, b:4, c:6}], 2: [{a:2, b:5, c:9}] }\r\n */\r\nexport const collect_by_path = (path, entries = []) => {\r\n    let collection = {}\r\n    entries.forEach(entry => {\r\n        const prop = getIn(entry, path)\r\n        if (collection[prop]) {\r\n            return collection[prop].push(entry)\r\n        }\r\n        return (collection[prop] = [ entry ])\r\n    })\r\n    return collection\r\n}\r\n\r\n/**\r\n * @example\r\n * let test = [{a:1, b:2, c:3}, {a:2, b:5, c:9}, {a:1, b:4, c:6}]\r\n *\r\n * aggregate_by_key(test) //?\r\n *\r\n * { a: [ 1, 2, 1 ], b: [ 2, 5, 4 ], c: [ 3, 9, 6 ] }\r\n */\r\nexport const aggregate_by_key = (reports = []) => {\r\n    let aggregates = {}\r\n    reports.forEach(report => {\r\n        Object.entries(report).forEach(([ k, v ]) => {\r\n            if (aggregates[k]) {\r\n                return aggregates[k].push(v)\r\n            }\r\n            return (aggregates[k] = [ v ])\r\n        })\r\n    })\r\n    return aggregates\r\n}\r\n\r\n/**\r\n * HOF that takes an config object with keys that match\r\n * target keys of a target object and values that represent\r\n * reducer functions to be applied to the target object\r\n * values (arrays) and returns an object with those\r\n * operations applied. Any target object keys not found in\r\n * the config object are omitted from the resulting object\r\n *  \r\n * @example\r\n * let ex = { a: [ 1, 2, 1 ], b: [ 2, 5, 4 ], c: [ 3, 9, 6 ] }\r\n * apply_kv_ops({a: [(a, c, i, d) => a + c, 0], b: [(a, c, i, d) => (a.push(c), a), []]})(ex) //?\r\n * { a: 4, b: [2, 5, 4] }\r\n */\r\nexport const apply_kv_ops = (key_reduction_map = {}) => (aggregate = {}) => {\r\n    return Object.entries(aggregate).reduce((a, c) => {\r\n        let [ _key, arr ] = c\r\n        if (key_reduction_map[_key]) {\r\n            // @ts-ignore\r\n            a[_key] = arr.reduce(...key_reduction_map[_key])\r\n        }\r\n        return a\r\n    }, {})\r\n}\r\n\r\n/**\r\n * HOF that takes a config object with keys that correspond\r\n * to a static value to be compared/matched against a target\r\n * arrays items and applies the configs corresponding\r\n * value (function) to the target item. Returns an object...\r\n * \r\n * @example\r\n * let ex = [\r\n *  { type: \"body\", name: \"Get in my belly\" }, \r\n *  { type: \"title\", name: \"Austin Powers\" }, \r\n *  { type: \"video\", name: \"some Youtube video\"}\r\n * ]\r\n * \r\n * apply_ops_by_value({\r\n *  body:  [(a, c) => ({ ...a, body: c })],\r\n *  title: [(a, c) => { \r\n *      let upper = c.toUpperCase()\r\n *      return { ...a, title: upper }\r\n *    }]\r\n * })\r\n */\r\nexport const apply_ops_by_value = (value_conditions = {}) => (items = []) => {\r\n    // TODO\r\n}\r\n\r\n/**\r\n * Takes an array of COPE Assets(Pr) and returns an object\r\n * with the types as keys and the name & content as values\r\n * of that key. If indexes are needed, true can be passed as\r\n * the second arg\r\n *\r\n * @example\r\n * const test_assets = [\r\n    {\r\n        type    : \"T_BODY\",\r\n        name    : \"Body\",\r\n        index   : 1,\r\n        content :\r\n            \"Some sample _markdown_ content!\",\r\n    },\r\n    {\r\n        type    : \"T_OG_TITLE\",\r\n        name    : \"Title\",\r\n        index   : 2,\r\n        content : \"Example Title\",\r\n    },\r\n    {\r\n        type    : \"A_VIDEO\",\r\n        name    : \"Video\",\r\n        index   : 0,\r\n        content : \"https://youtu.be/RSdqooZIRwI\",\r\n    },\r\n]\r\n *\r\n * const assets\r\n */\r\nexport const convert_assets_to_object = (\r\n    assets = [ { type: \"\", name: \"\", content: \"\", index: 0 } ],\r\n    use_index = false,\r\n): any => {\r\n    return assets.reduce((a, c) => {\r\n        const { type, name, content, index } = c\r\n        const key = (index && use_index && type + index) || type\r\n        return { ...a, [key]: { name, content } }\r\n    }, {})\r\n}\r\n\r\n/**\r\n * @example\r\n *\r\n * const agr_coll = {\r\n * 'test1@some.com':\r\n *   { reports: [ [Object], [Object] ],\r\n *     summary:\r\n *      { success_count: 300,\r\n *        percent_opened: 3,\r\n *        click_rate: 5,\r\n *        unsubscribe_rate: 1.5 } },\r\n *  'test3@some.com':\r\n *   { reports: [ [Object] ],\r\n *     summary:\r\n *      { success_count: 300,\r\n *        percent_opened: 6,\r\n *        click_rate: 8,\r\n *        unsubscribe_rate: 3 } } }\r\n * averaged(agr_coll) //?\r\n * {\r\n *  success_count: 300,\r\n *  percent_opened: 4.5,\r\n *  click_rate: 6.5,\r\n *  unsubscribe_rate: 4\r\n * }\r\n * \r\n */\r\nexport const averaged = agr_coll =>\r\n    Object.entries(agr_coll).reduce((a, c, i, { length }) => {\r\n        const [ , stats ] = c\r\n        // @ts-ignore\r\n        const { summary } = stats\r\n        Object.entries(summary).forEach(([ k, v ]) => {\r\n            // @ts-ignore\r\n            a[k] = a[k] ? ~~((a[k] + v / length) * 100) / 100 : ~~(v / length * 100) / 100\r\n        })\r\n        return a\r\n    }, {})\r\n","var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t502,\n\t\t16\n\t],\n\t\"./amplify-auth-container.entry.js\": [\n\t\t503,\n\t\t17\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t504,\n\t\t18\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t505,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t506,\n\t\t19\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t529,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t507,\n\t\t20\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t508,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t509,\n\t\t21\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t510,\n\t\t22\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t511,\n\t\t23\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t512,\n\t\t24\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t513,\n\t\t25\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t514,\n\t\t26\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t515,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t516,\n\t\t27\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t517,\n\t\t28\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t518,\n\t\t29\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t519,\n\t\t30\n\t],\n\t\"./amplify-radio-button_3.entry.js\": [\n\t\t520,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t521,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t522,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t523,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t524,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t525,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t526,\n\t\t31\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t527,\n\t\t14\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t528,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 356;\nmodule.exports = webpackAsyncContext;","const primary_color = \"#0D1D2C\"\r\nconst secondary_color = \"#00a8e8\"\r\nconst tertiary_color = \"#205493\"\r\nconst muted_color = \"#F0F2F5\"\r\nconst accent_color = \"#e63946\"\r\n\r\nmodule.exports = {\r\n    primary_color,\r\n    secondary_color,\r\n    tertiary_color,\r\n    muted_color,\r\n    accent_color,\r\n}\r\n","import { $store$ } from \"@-0/browser\"\r\nimport { useState } from \"react\"\r\nimport { Cursor } from \"@thi.ng/atom\"\r\n//import { log } from \"../utils/data\"\r\n\r\nexport const createCursor = atom => (path, uid = `cursor-${Date.now()}`) => {\r\n    const [ state, setState ] = useState(null)\r\n    const cursor = new Cursor(atom, path)\r\n    cursor.addWatch(uid, (id, bfr, aft) => {\r\n        //log(`${id} cursor triggered`, { state })\r\n        setState(aft)\r\n    })\r\n    return [ state, cursor ]\r\n}\r\n\r\nexport const useCursor = createCursor($store$)\r\n","import { registerCMD } from \"@-0/spool\"\r\nimport { cmd_nav } from \"@-0/browser\"\r\n\r\nexport const NAV = registerCMD(cmd_nav)\r\n","import React, { useContext } from \"react\"\r\nimport { CTX } from \"../context\"\r\nimport { NAV } from \"../commands\"\r\nimport { run$ } from \"@-0/spool\"\r\n\r\nexport const Link = ({ href, style = {}, children }) => {\r\n    const path = `/${href}`\r\n    //log({ path })\r\n    return (\r\n        <a\r\n            href={path}\r\n            onClick={e => {\r\n                const { target, currentTarget } = e\r\n                //@ts-ignore\r\n                const href = target.href || path\r\n                const curr = currentTarget || document\r\n                e.preventDefault()\r\n                run$.next({\r\n                    ...NAV,\r\n                    args: {\r\n                        target: { href },\r\n                        currentTarget: curr,\r\n                    },\r\n                })\r\n            }}\r\n            style={style}\r\n        >\r\n            {children}\r\n        </a>\r\n    )\r\n}\r\n","import { createContext } from \"react\"\r\nimport { run$ } from \"@-0/spool\"\r\nimport { $store$ } from \"@-0/browser\"\r\nimport { URL2obj } from \"@-0/utils\"\r\nimport { useCursor } from \"../hooks\"\r\nimport { Pre } from \"../components\"\r\n\r\nexport const default_context = {\r\n    $store$,\r\n    parse: () => URL2obj(window.location.href),\r\n    authState: null,\r\n    user: null,\r\n}\r\n\r\nexport const CTX = createContext(default_context)\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Row, Col } from \"antd\"\r\n\r\nconst LinkCol = styled(Col)`\r\n    text-align: center;\r\n`\r\n\r\nconst SeparatedLinks = styled.a`\r\n    color: #fff;\r\n    margin: 0px 4px;\r\n\r\n    &:hover {\r\n        color: #fff;\r\n        text-decoration: underline;\r\n    }\r\n`\r\n\r\nconst ColorSpan = styled.span`\r\n    color: #fff;\r\n`\r\n\r\nconst FooterSeparator = styled.hr`\r\n    border-top-width: thin;\r\n    border-top-style: solid;\r\n    border-top-color: #405773;\r\n    border-bottom: none;\r\n    margin: 8px 0;\r\n`\r\n\r\nconst VisionStatement = styled.p`\r\n    text-align: center;\r\n    color: #fff;\r\n    font-size: 1.125rem;\r\n    margin: 0px 0px 0px 0px;\r\n`\r\n\r\nexport const CensusAcademyFooter = () => (\r\n    <>\r\n        <Row>\r\n            <LinkCol span={24}>\r\n                <SeparatedLinks href=\"#\">Census Jobs</SeparatedLinks>\r\n                <ColorSpan>|</ColorSpan>\r\n                <SeparatedLinks href=\"#\">Information Quality</SeparatedLinks>\r\n                <ColorSpan>|</ColorSpan>\r\n                <SeparatedLinks href=\"#\">Data Linkage Infrastructure</SeparatedLinks>\r\n                <ColorSpan>|</ColorSpan>\r\n                <SeparatedLinks href=\"#\">Data Protection and Privacy Policy</SeparatedLinks>\r\n                <ColorSpan>|</ColorSpan>\r\n                <SeparatedLinks href=\"#\">Accessibility</SeparatedLinks>\r\n                <ColorSpan>|</ColorSpan>\r\n                <SeparatedLinks href=\"#\">FOIA</SeparatedLinks>\r\n                <ColorSpan>|</ColorSpan>\r\n                <SeparatedLinks href=\"#\">U.S. Department of Commerce</SeparatedLinks>\r\n                <ColorSpan>|</ColorSpan>\r\n                <SeparatedLinks href=\"#\">USA.gov</SeparatedLinks>\r\n            </LinkCol>\r\n        </Row>\r\n        <FooterSeparator />\r\n        <Row>\r\n            <Col span={24}>\r\n                <VisionStatement>\r\n                    Measuring America&apos;s People, Places, and Economy\r\n                </VisionStatement>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n)\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { AmplifySignOut } from \"@aws-amplify/ui-react\"\r\nimport { Auth } from \"@aws-amplify/auth\"\r\nimport { DOMnavigated$ } from \"@-0/browser\"\r\nimport { Link } from \"./Link\"\r\nimport { primary_color } from \"../theme/colors.js\"\r\nimport { CTX, default_context } from \"../context\"\r\nimport { Breadcrumbs, Header } from \"../components\"\r\nimport { AuthState, onAuthUIStateChange } from \"@aws-amplify/ui-components\"\r\nimport { CensusAcademyFooter } from \"./CensusAcademyFooter\"\r\n\r\nimport { Layout, Row, Col } from \"antd\"\r\n\r\nconst { Content, Footer } = Layout\r\n\r\nexport const Chrome = ({ authUser, children }) => {\r\n    const [authState, setAuthState] = useState()\r\n    const [user, setUser] = useState()\r\n    //console.log({ authUser, authState, user })\r\n\r\n    useEffect(() => {\r\n        //console.log(\"App useEffect Triggered ⚠\")\r\n        setUser(authUser)\r\n        return onAuthUIStateChange((nextAuthState, authData) => {\r\n            //@ts-ignore\r\n            setAuthState(nextAuthState)\r\n            //@ts-ignore\r\n            setUser(authData)\r\n        })\r\n    }, [authState, user, authUser])\r\n\r\n    return (\r\n        <Layout>\r\n            <Header authState={authState} user={user} />\r\n            <Content\r\n                className=\"site-layout\"\r\n                style={{ padding: \"0 32px\", marginTop: 64, width: \"100%\" }}\r\n            >\r\n                <Row>\r\n                    <Col span={24} style={{ textAlign: \"center\" }}>\r\n                        <small style={{ fontWeight: \"bold\" }}>\r\n                            This is a development prototype!\r\n                        </small>\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"site-layout-background\" style={{ minHeight: 380 }}>\r\n                    <CTX.Provider\r\n                        value={{\r\n                            ...default_context,\r\n                            authState,\r\n                            user,\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </CTX.Provider>\r\n                </div>\r\n            </Content>\r\n            <Footer style={{ background: primary_color }}>\r\n                <CensusAcademyFooter />\r\n            </Footer>\r\n        </Layout>\r\n    )\r\n}\r\n","import React, { useContext, useLayoutEffect, useEffect } from \"react\"\r\nimport { getIn } from \"@thi.ng/paths\"\r\nimport { isFunction } from \"@thi.ng/checks\"\r\nimport * as K from \"@-0/keys\"\r\nimport { CTX } from \"../context\"\r\nimport { useCursor } from \"../hooks\"\r\n\r\n/**\r\n * TODO: Abstract away\r\n * // PRIORITY: API\r\n * @params = {\r\n *      key: value\r\n *      page_key_returned_from_equivmap: ActualPageComponent\r\n * }\r\n */\r\nexport const View = () => {\r\n    const { $store$ } = useContext(CTX)\r\n    const [Page, pageCursor] = useCursor([K.$$_VIEW], \"View Page\")\r\n    const [loading, loadingCursor] = useCursor([K.$$_LOAD], \"View loading\")\r\n    const [path, pathCursor] = useCursor([K.$$_PATH], \"Route Path\")\r\n\r\n    useLayoutEffect(() => {\r\n        // re-render when loading state changes\r\n        //console.log(\"re-rendered Page:\", { loading })\r\n        // cleanup\r\n        return () => {\r\n            //log(\"cleaning up:\", { loading, Page })\r\n            loadingCursor.release()\r\n            pathCursor.release()\r\n            pageCursor.release()\r\n        }\r\n    }, [loadingCursor, pathCursor, pageCursor, Page, loading, path])\r\n\r\n    const store = $store$.deref()\r\n\r\n    //console.log({ store })\r\n\r\n    const loader = (\r\n        <div className=\"spinner_container\" style={{ marginTop: \"64px\" }}>\r\n            <div className=\"spinner\">\r\n                <h1> fetching data... </h1>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const is_home = !store[K.$$_PATH].length\r\n    const data =\r\n        //@ts-ignore\r\n        (is_home && getIn(store, [\"data\"])) || getIn(store, path)\r\n    //console.log({ Page, data })\r\n\r\n    return loading || !Page || !data ? loader : <Page data={data} />\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\"\r\nimport { DOMnavigated$ } from \"@-0/browser\"\r\nimport { AuthState } from \"@aws-amplify/ui-components\"\r\nimport { primary_color } from \"../theme/colors.js\"\r\nimport { CTX } from \"../context\"\r\nimport { Link } from \"./Link\"\r\nimport { SignInButton, SignOutButton } from \"../components\"\r\nimport { Layout, Menu } from \"antd\"\r\n\r\nconst { Header: HEADER } = Layout\r\nconst {\r\n    ConfirmSignIn,\r\n    ConfirmSignUp,\r\n    CustomConfirmSignIn,\r\n    ForgotPassword,\r\n    Loading,\r\n    ResetPassword,\r\n    SettingMFA,\r\n    SignIn,\r\n    SignOut,\r\n    SignUp,\r\n    SignedIn,\r\n    SignedOut,\r\n    SigningUp,\r\n    TOTPSetup,\r\n    VerifyContact,\r\n    VerifyingAttributes,\r\n    confirmingSignInCustomFlow,\r\n    confirmingSignUpCustomFlow,\r\n} = AuthState\r\n\r\nexport const Header = ({ authState, user }) => {\r\n    return (\r\n        <HEADER style={{ position: \"fixed\", zIndex: 1, width: \"100%\", padding: \"0 1rem\" }}>\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[ \"2\" ]}>\r\n                <Menu.Item key=\"1\">\r\n                    <a href=\"/\">\r\n                        <img\r\n                            src={process.env.PUBLIC_URL + \"/us-census-bureau-logo-white.svg\"}\r\n                            alt=\"US Census Bureau logo\"\r\n                            style={{ width: \"6rem\" }}\r\n                        />\r\n                    </a>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\" style={{}}>\r\n                    <Link href=\"gems\">Data Gems</Link>\r\n                </Menu.Item>\r\n                {/* TODO front end pages and routes for webinars and courses */}\r\n                <Menu.Item key=\"3\">\r\n                    <Link href=\"courses\">Courses</Link>\r\n                </Menu.Item>\r\n                {/* \r\n                <Menu.Item key=\"4\">\r\n                    <Link href=\"#\">Webinars</Link>\r\n                </Menu.Item> */}\r\n                <Menu.Item key=\"4\">\r\n                    <Link href=\"about\">About</Link>\r\n                </Menu.Item>\r\n                {(authState === SignedIn || user) && (\r\n                    <Menu.Item key=\"5\">\r\n                        <Link href=\"user\">User Dashboard</Link>\r\n                    </Menu.Item>\r\n                )}\r\n                <Menu.Item key=\"6\" style={{ marginLeft: \"auto\" }}>\r\n                    {authState === SignedIn ? (\r\n                        <SignOutButton />\r\n                    ) : authState === SignedOut ? (\r\n                        <SignInButton />\r\n                    ) : user ? (\r\n                        <SignOutButton />\r\n                    ) : (\r\n                        <SignInButton />\r\n                    )}\r\n                </Menu.Item>\r\n            </Menu>\r\n        </HEADER>\r\n    )\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\"\r\nimport { CTX } from \"../context\"\r\nimport { AmplifyAuthenticator, AmplifySignIn, AmplifySignUp } from \"@aws-amplify/ui-react\"\r\nimport { AuthState } from \"@aws-amplify/ui-components\"\r\n\r\nconst required_fields = [\r\n    {\r\n        type: \"username\",\r\n        placeholder: \"john@email.com\",\r\n        required: true,\r\n        label: \"Email Address\",\r\n    },\r\n    { type: \"password\", required: true },\r\n]\r\n\r\nconst SignUp = () => <AmplifySignUp slot=\"sign-up\" formFields={required_fields} />\r\n\r\nexport const SignIn = ({ data }) => {\r\n    const { authState } = useContext(CTX)\r\n    //console.log(\"SignIn page data:\", data)\r\n    //{\r\n    //    !authState || authState === AuthState.SignedOut || authState === AuthState.SignIn ? <SignIn />\r\n    //    : authState === AuthState.SignedIn && user ? <SignedIn />\r\n    //    : <SignUp />\r\n    //}\r\n    return (\r\n        <AmplifyAuthenticator>\r\n            {!authState || authState === AuthState.SignedOut || authState === AuthState.SignIn ? (\r\n                <AmplifySignIn slot=\"sign-in\" formFields={required_fields} />\r\n            ) : (\r\n                <SignUp />\r\n            )}\r\n            {/*<pre>{JSON.stringify(data, null, 4)}</pre>*/}\r\n        </AmplifyAuthenticator>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Row, Col, Button } from \"antd\"\r\nimport { primary_color, tertiary_color } from \"../theme/colors\"\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 8px 24px;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n    color: white;\r\n    font-weight: 500;\r\n    background: #ff7359;\r\n    margin: 16px 16px 16px 0px;\r\n    border-radius: 5px;\r\n    border: none;\r\n\r\n    &:hover {\r\n        color: white;\r\n        background: #ff7359;\r\n    }\r\n`\r\n\r\nconst StyledHero = styled(Col)`\r\n    background: rgb(2, 0, 36);\r\n    background: linear-gradient(0deg, rgba(2, 0, 36, 1) 0%, rgba(4, 131, 146, 1) 80%);\r\n    text-align: center;\r\n`\r\n\r\nconst HeroHeader = styled.h1`\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    margin: 0;\r\n    color: white;\r\n`\r\n\r\nconst HeroSubHeading = styled.h2`\r\n    font-size: 1.5rem;\r\n    font-style: italic;\r\n    font-weight: 300;\r\n    text-align: center;\r\n    margin: 0;\r\n    color: white;\r\n`\r\n\r\nconst SectionHeader = styled.h2`\r\n    font-size: 1rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n`\r\n\r\nconst SectionText = styled.p`\r\n    font-size: 1.75rem;\r\n    font-weight: 500;\r\n    width: 60%;\r\n    margin: 0;\r\n`\r\n\r\nconst DataTopicsHeader = styled.h2`\r\n    font-size: 1rem;\r\n    color: ${primary_color};\r\n`\r\nexport const Landing = ({ children }) => (\r\n    <>\r\n        <Row>\r\n            <StyledHero span={24}>\r\n                <HeroHeader>Census Academy</HeroHeader>\r\n                <HeroSubHeading>Your Virtual Hub for Learning Data Skills</HeroSubHeading>\r\n                <StyledButton style={{ background: \"#048392\" }}>Start Learning</StyledButton>\r\n                <StyledButton style={{ background: \"#048392\" }}>Request Data Training</StyledButton>\r\n            </StyledHero>\r\n        </Row>\r\n        {/* Header */}\r\n        {/* Until we can get SVGs that match the SVGs\r\n        on the Census Acadeny landing page or in the mockup\r\n        (https://projects.invisionapp.com/share/8FXZWNB7TX9#/screens/424501319)\r\n        just leave */}\r\n        {/* <Row style={{ background: \"#fff\" }}>\r\n            <Col span={24}>\r\n                <Wrapper>\r\n                    <SectionHeader>Browse our data topics</SectionHeader>\r\n                </Wrapper>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{ background: \"#fff\" }}>\r\n            <Col span={4}>\r\n                <Wrapper>\r\n                    <div>Graphic Here</div>\r\n                    <DataTopicsHeader>Data Science</DataTopicsHeader>\r\n                </Wrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n                <Wrapper>\r\n                    <div>Graphic Here</div>\r\n                    <DataTopicsHeader>Geography</DataTopicsHeader>\r\n                </Wrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n                <Wrapper>\r\n                    <div>Graphic Here</div>\r\n                    <DataTopicsHeader>Data Visualization</DataTopicsHeader>\r\n                </Wrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n                <Wrapper>\r\n                    <div>Graphic Here</div>\r\n                    <DataTopicsHeader>Population</DataTopicsHeader>\r\n                </Wrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n                <Wrapper>\r\n                    <div>Graphic Here</div>\r\n                    <DataTopicsHeader>Business & Economy</DataTopicsHeader>\r\n                </Wrapper>\r\n            </Col>\r\n            <Col span={4}>\r\n                <Wrapper>\r\n                    <div>Graphic Here</div>\r\n                    <DataTopicsHeader>Housing</DataTopicsHeader>\r\n                </Wrapper>\r\n            </Col>\r\n        </Row> */}\r\n        {/* Header */}\r\n        <Row>\r\n            <Col span={24}>\r\n                <Wrapper>\r\n                    <SectionHeader>For all users of all levels</SectionHeader>\r\n                </Wrapper>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col lg={12} md={24} sm={24}>\r\n                <Wrapper>\r\n                    <SectionText>\r\n                        Take courses to use Census data for your business, personal use, or analysis\r\n                        at any level\r\n                    </SectionText>\r\n                    <StyledButton>Take Courses</StyledButton>\r\n                </Wrapper>\r\n            </Col>\r\n            <Col lg={12} md={24} sm={24}></Col>\r\n        </Row>\r\n        {/* Header */}\r\n        <Row style={{ background: tertiary_color }}>\r\n            <Col lg={12} md={24} sm={24}></Col>\r\n            <Col lg={12} md={24} sm={24}>\r\n                <Wrapper>\r\n                    <SectionHeader style={{ color: \"white\" }}>\r\n                        For small businesses and data enthusiasts\r\n                    </SectionHeader>\r\n                </Wrapper>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{ background: tertiary_color }}>\r\n            <Col lg={12} md={24} sm={24}></Col>\r\n            <Col lg={12} md={24} sm={24}>\r\n                <Wrapper>\r\n                    <SectionText style={{ color: \"white\" }}>\r\n                        Browse our Data Gem videos and apply those skills to analyze data and\r\n                        business tools in Data Challenges\r\n                    </SectionText>\r\n                    <StyledButton>Browse Data Gems</StyledButton>\r\n                    <StyledButton>Take Data Challenges</StyledButton>\r\n                </Wrapper>\r\n            </Col>\r\n        </Row>\r\n        {/* Header */}\r\n        <Row style={{ background: \"#048392\" }}>\r\n            <Col span={24}>\r\n                <Wrapper>\r\n                    <SectionHeader style={{ color: \"white\" }}>\r\n                        For data enthusiasts and analysts\r\n                    </SectionHeader>\r\n                </Wrapper>\r\n            </Col>\r\n        </Row>\r\n        <Row style={{ background: \"#048392\" }}>\r\n            <Col lg={12} md={24} sm={24}>\r\n                <Wrapper>\r\n                    <SectionText style={{ color: \"white\" }}>\r\n                        Watch webinars live or pre-recorded about Census data and current trends on\r\n                        your own schedule\r\n                    </SectionText>\r\n                    <StyledButton>Watch Webinars</StyledButton>\r\n                </Wrapper>\r\n            </Col>\r\n            <Col lg={12} md={24} sm={24}></Col>\r\n        </Row>\r\n    </>\r\n)\r\n","import React, { useContext } from \"react\"\r\nimport { CTX } from \"../context\"\r\nimport { unified } from \"unified\"\r\n// import parse from \"remark-parse\"\r\nimport remark2react from \"remark-react\"\r\nimport styled from \"styled-components\"\r\nimport { primary_color } from \"../theme/colors\"\r\n//import {} from \"styled-system\"\r\nimport { Row, Col } from \"antd\"\r\nimport { Link, Breadcrumbs } from \"../components\"\r\n\r\nconst Image = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    border-bottom: 2px solid ${primary_color};\r\n`\r\n\r\nconst GemWrapper = styled.div`\r\n    margin: 0px 8px;\r\n`\r\n\r\nconst GemCardHeader = styled.h2`\r\n    font-size: 0.8rem;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`\r\n\r\nconst GemDate = styled.p`\r\n    margin: 0;\r\n    font-size: 0.8rem;\r\n`\r\n\r\nconst DataGemCard = ({ image, title, date, link }) => {\r\n    return (\r\n        <GemWrapper>\r\n            <Link href={link}>\r\n                <Image src={image} alt={title} />\r\n            </Link>\r\n            <GemCardHeader>{title}</GemCardHeader>\r\n            <GemDate>{date}</GemDate>\r\n        </GemWrapper>\r\n    )\r\n}\r\n\r\nconst StyledHero = styled.div`\r\n    background: rgb(2, 0, 36);\r\n    background: linear-gradient(0deg, rgba(2, 0, 36, 1) 0%, rgba(4, 131, 146, 1) 80%);\r\n    text-align: center;\r\n    padding: 48px;\r\n\r\n    @media (max-width: 400px) {\r\n        margin-left: -20%;\r\n        margin-right: -20%;\r\n    }\r\n`\r\n\r\nconst HeroHeader = styled.h1`\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    margin: 0;\r\n    color: white;\r\n`\r\n\r\nconst HeroSubHeading = styled.p`\r\n    font-size: 1.25rem;\r\n    font-weight: 300;\r\n    text-align: center;\r\n    margin: 0;\r\n    color: white;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 8px 24px;\r\n`\r\n\r\nconst SectionHeading = styled.h2`\r\n    font-size: 1.75rem;\r\n    font-color ${primary_color};\r\n    font-weight: 500;\r\n`\r\n\r\nexport const Gems = ({ data }) => {\r\n    const { parse } = useContext(CTX)\r\n    const { URL_PATH } = parse()\r\n    const items = data\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumbs path={URL_PATH} />\r\n            <Row>\r\n                <Col span={24}>\r\n                    <StyledHero>\r\n                        <HeroHeader>Data Gems</HeroHeader>\r\n                        <HeroSubHeading>\r\n                            Watch Data Gems: a series of &quot;how-to&ldquo; videos available for\r\n                            data users who are looking for an easy and quick way to enhance their\r\n                            knowledge of Census data.\r\n                        </HeroSubHeading>\r\n                    </StyledHero>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Wrapper>\r\n                        <SectionHeading>All Data Gems</SectionHeading>\r\n                    </Wrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ padding: \"0px 16px\", marginBottom: \"64px\" }} gutter={[8, 24]}>\r\n                {items.map((item, index) => {\r\n                    const { id } = item\r\n                    const assets = item?.assets?.items\r\n                    const date = Date.parse(item?.createdAt)\r\n                    const formattedDate = new Intl.DateTimeFormat(\"en-US\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"numeric\",\r\n                    }).format(date)\r\n                    const { cover, title, body } = assets.reduce(\r\n                        (a, c) => {\r\n                            const { type, name, content } = c\r\n                            switch (type) {\r\n                                case \"A_VIDEO\": {\r\n                                    const parts = content.split(\"/\")\r\n                                    const id = parts[parts.length - 1]\r\n                                    return (a.cover = `https://img.youtube.com/vi/${id}/0.jpg`), a\r\n                                }\r\n                                case \"A_IMAGE\":\r\n                                    return (a.cover = content), a\r\n                                case \"T_OG_TITLE\":\r\n                                    return (a.title = content), a\r\n                                default:\r\n                                    return a\r\n                            }\r\n                        },\r\n                        { cover: null, title: null, body: null }\r\n                    )\r\n\r\n                    return (\r\n                        <Col lg={6} md={12} sm={24} key={index}>\r\n                            <DataGemCard\r\n                                image={cover}\r\n                                title={title}\r\n                                date={formattedDate}\r\n                                link={`gems/${id}`}\r\n                            />\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { CTX } from \"../context\"\r\nimport styled from \"styled-components\"\r\nimport { unified } from \"unified\"\r\nimport parse from \"remark-parse\"\r\nimport remark2react from \"remark-react\"\r\nimport { Row, Col, Card } from \"antd\"\r\nimport YouTube from \"react-youtube\"\r\nimport { Breadcrumbs } from \"../components\"\r\nimport { primary_color } from \"../theme/colors\"\r\nconst { Meta } = Card\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    max-width: 650px;\r\n`\r\n\r\nconst ContentHeading = styled.h1`\r\n    font-size: 1.75rem;\r\n    color: ${primary_color};\r\n`\r\n\r\nconst DateText = styled.p`\r\n    font-size: 1.125rem;\r\n    margin: 8px 0;\r\n`\r\n\r\nexport const Gem = ({ data }) => {\r\n    const context = useContext(CTX)\r\n    const { URL_PATH } = context.parse()\r\n\r\n    const { T_BODY, T_OG_TITLE, A_VIDEO, date } = data\r\n    const formattedDate = new Intl.DateTimeFormat(\"en-US\", {\r\n        year: \"numeric\",\r\n        month: \"long\",\r\n        day: \"numeric\",\r\n    }).format(Date.parse(date))\r\n    const title = T_OG_TITLE?.content\r\n    const body = unified().use(parse).use(remark2react).processSync(T_BODY?.content).result\r\n    const id = A_VIDEO?.content.split(\"/\").pop()\r\n\r\n    return (\r\n        <div style={{ margin: \"0px 192px\" }}>\r\n            <Breadcrumbs path={URL_PATH} />\r\n            <ContentHeading>{title}</ContentHeading>\r\n            <Wrapper>\r\n                <YouTube videoId={id} />\r\n            </Wrapper>\r\n            <DateText>{formattedDate}</DateText>\r\n            <p>{body}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Row, Col, Divider, Card, Button } from \"antd\"\r\nimport { Breadcrumbs, Link } from \"../components\"\r\nimport { CTX } from \"../context\"\r\nimport { primary_color } from \"../theme/colors\"\r\n\r\n// importing this and using this query here\r\n// isn't in the spirit of our architecture\r\n// data queries should live within `router/index.ts`\r\n// but for now we need to query here since to get user data since\r\n// we either need to make a call to the amplify API OR\r\n// useContext(CTX) and pull `user` from the context\r\n// since these are the two ways I'm aware to get the user ID so we can\r\n// then query the user node...i'm querying the user node here, since\r\n// `router/index.ts` is not a react component\r\nimport { node } from \"cope-client-utils\"\r\n\r\nconst mockData = {\r\n    coursesAndChallenges: [\r\n        {\r\n            type: \"course\",\r\n            image: \"https://i.picsum.photos/id/126/300/200.jpg?hmac=fXUWYFrtVitPvv_lkslT9QHgCh-cy7bJyDSF65Rqcr0\",\r\n            title: \"Census Data with R\",\r\n            link: \"#\",\r\n        },\r\n        {\r\n            type: \"course\",\r\n            image: \"https://i.picsum.photos/id/126/300/200.jpg?hmac=fXUWYFrtVitPvv_lkslT9QHgCh-cy7bJyDSF65Rqcr0\",\r\n            title: \"Open Mapping Education Series\",\r\n            link: \"#\",\r\n        },\r\n        {\r\n            type: \"course\",\r\n            image: \"https://i.picsum.photos/id/126/300/200.jpg?hmac=fXUWYFrtVitPvv_lkslT9QHgCh-cy7bJyDSF65Rqcr0\",\r\n            title: \"Analyzing Census Data in Excel\",\r\n            link: \"#\",\r\n        },\r\n    ],\r\n    gems: [\r\n        {\r\n            image: \"https://i.picsum.photos/id/126/300/200.jpg?hmac=fXUWYFrtVitPvv_lkslT9QHgCh-cy7bJyDSF65Rqcr0\",\r\n            title: \"Spatial Shifts in Daytime Population Due to COVID - Impacts and Increasing Levels of Remote Work\",\r\n            date: \"July 21, 2021\",\r\n            link: \"#\",\r\n        },\r\n        {\r\n            image: \"https://i.picsum.photos/id/126/300/200.jpg?hmac=fXUWYFrtVitPvv_lkslT9QHgCh-cy7bJyDSF65Rqcr0\",\r\n            title: \"Exploring Census Data: How Americans Spend Leisure Time\",\r\n            date: \"July 22, 2021\",\r\n            link: \"#\",\r\n        },\r\n        {\r\n            image: \"https://i.picsum.photos/id/126/300/200.jpg?hmac=fXUWYFrtVitPvv_lkslT9QHgCh-cy7bJyDSF65Rqcr0\",\r\n            title: \"Economic Censuses and Surveys\",\r\n            date: \"July 28, 2021\",\r\n            link: \"#\",\r\n        },\r\n        {\r\n            image: \"https://i.picsum.photos/id/126/300/200.jpg?hmac=fXUWYFrtVitPvv_lkslT9QHgCh-cy7bJyDSF65Rqcr0\",\r\n            title: \"Economic Censuses and Surveys\",\r\n            date: \"July 28, 2021\",\r\n            link: \"#\",\r\n        },\r\n    ],\r\n    webinars: [\r\n        {\r\n            title: \"How to Create and Customize a Map using data.census.gov\",\r\n            date: \"June 28, 2021\",\r\n            description:\r\n                \"In this Data Gem, we will show you how to use this feature to customize and visualize data for your area.\",\r\n            link: \"#\",\r\n        },\r\n        {\r\n            title: \"How to Access American Community Survey Data Using Census Reporter\",\r\n            date: \"May 14, 2021\",\r\n            description:\r\n                \"In this Data Gem, you will learn about Census Reporter, a data tool that allows you to access and visualize American Community Survey data for a variety of topics and geographic levels.\",\r\n            link: \"#\",\r\n        },\r\n        {\r\n            title: \"How to Use the COVID-19 Data Hub\",\r\n            date: \"September 04, 2020\",\r\n            description:\r\n                \"This Data Gem will explore the new COVID-19 Hub and the resource page developed by the Census Bureau.\",\r\n            link: \"#\",\r\n        },\r\n    ],\r\n}\r\n\r\nconst ProfilePicture = styled.img`\r\n    width: 100%;\r\n    border-radius: 50%;\r\n    border: 3px solid var(--amplify-primary-tint);\r\n\r\n    &:after {\r\n        content: \"\";\r\n        display: block;\r\n        padding-bottom: 100%;\r\n    }\r\n`\r\n\r\nconst ProfileHeader = styled.h1`\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n`\r\n\r\nconst ProfileDescription = styled.p`\r\n    font-size: 1.25rem;\r\n    width: 75%;\r\n`\r\n\r\nconst SectionHeader = styled.h2`\r\n    margin: 8px 0;\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n`\r\n\r\nconst StyledCard = styled(Card)`\r\n    border-radius: 5px;\r\n    border: 2px solid ${primary_color};\r\n    margin: 0px 12px;\r\n    height: 100%;\r\n    position: relative;\r\n`\r\n\r\nconst LinkStyles = {\r\n    color: \"white\",\r\n    fontWeight: 500,\r\n    backgroundColor: \"#048392\",\r\n    padding: \"4px 8px\",\r\n    borderRadius: \"5px\",\r\n}\r\n\r\nconst CenteredWrapper = styled.div`\r\n    align-items: center;\r\n    text-align: center;\r\n`\r\n\r\nconst ImageWrapper = styled.div`\r\n    margin: -24px -24px 0px;\r\n`\r\n\r\nconst Image = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    border-bottom: 2px solid ${primary_color};\r\n`\r\n\r\nconst CourseCard = ({ type, image, title, link }) => {\r\n    return (\r\n        <StyledCard>\r\n            <ImageWrapper>\r\n                <Image src={image} alt={title} />\r\n            </ImageWrapper>\r\n            <h2>{title}</h2>\r\n            <CenteredWrapper>\r\n                {type === \"course\" && (\r\n                    <Link href={link} style={LinkStyles}>\r\n                        Continue Course\r\n                    </Link>\r\n                )}\r\n                {type === \"dataChallenge\" && (\r\n                    <Link href={link} style={LinkStyles}>\r\n                        Take the Challenge\r\n                    </Link>\r\n                )}\r\n            </CenteredWrapper>\r\n        </StyledCard>\r\n    )\r\n}\r\nconst WebinarDate = styled.p`\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`\r\nconst WebinarCard = ({ title, date, description, link }) => {\r\n    return (\r\n        <StyledCard>\r\n            <h2>{title}</h2>\r\n            <WebinarDate>{date}</WebinarDate>\r\n            <p>{description}</p>\r\n            <CenteredWrapper>\r\n                <Link href={link} style={LinkStyles}>\r\n                    Watch Webinar\r\n                </Link>\r\n            </CenteredWrapper>\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nconst GemWrapper = styled.div`\r\n    margin: 0px 8px;\r\n`\r\n\r\nconst GemCardHeader = styled.h2`\r\n    font-size: 0.8rem;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`\r\n\r\nconst GemDate = styled.p`\r\n    margin: 0;\r\n    font-size: 0.8rem;\r\n`\r\nconst DataGemCard = ({ image, title, date, link }) => {\r\n    return (\r\n        <GemWrapper>\r\n            <Link href={link}>\r\n                <Image src={image} alt={title} />\r\n            </Link>\r\n            <GemCardHeader>{title}</GemCardHeader>\r\n            <GemDate>{date}</GemDate>\r\n        </GemWrapper>\r\n    )\r\n}\r\n\r\n// TODO populate user dashboard with data from user account node!!\r\nexport const UserDashboard = ({ data }) => {\r\n    const [userNode, setUserNode] = useState(null)\r\n    const { parse, user, authState } = useContext(CTX)\r\n    const { URL_PATH } = parse()\r\n    useEffect(() => {\r\n        const fetchAccountNode = async () => {\r\n            // this query should work, but I haven't been able\r\n            // to test this query fully since my account does not have\r\n            // an account node yet -- Tommy\r\n            const res = await node.read({ id: `ACCOUNT-${user?.username}` })\r\n            setUserNode(res)\r\n        }\r\n        fetchAccountNode()\r\n    }, [user])\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumbs path={URL_PATH} />\r\n            <Row>\r\n                <Col span={4} style={{ textAlign: \"center\" }}>\r\n                    <ProfilePicture\r\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png\"\r\n                        alt=\"Placeholder profile picture\"\r\n                    />\r\n                </Col>\r\n                <Col span={2} />\r\n                <Col span={18}>\r\n                    <ProfileHeader>My Profile</ProfileHeader>\r\n                    <ProfileDescription>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\r\n                        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\r\n                        quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\r\n                        consequat.\r\n                    </ProfileDescription>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={6}></Col>\r\n                <Col span={2}>Badge</Col>\r\n                <Col span={2}>Badge</Col>\r\n                <Col span={2}>Badge</Col>\r\n                <Col span={2}>Badge</Col>\r\n                <Col span={2}>Badge</Col>\r\n                <Col span={2}>Badge</Col>\r\n            </Row>\r\n            <Divider />\r\n            {/* Subsection Header */}\r\n            <Row>\r\n                <SectionHeader>Courses & Data Challenges</SectionHeader>\r\n            </Row>\r\n            <Row>\r\n                {mockData.coursesAndChallenges.map((item, i) => (\r\n                    <Col span={8} key={i}>\r\n                        <CourseCard\r\n                            type={item.type}\r\n                            image={item.image}\r\n                            title={item.title}\r\n                            link={item.link}\r\n                        />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            {/* Subsection Header */}\r\n            <Row>\r\n                <SectionHeader>Webinars</SectionHeader>\r\n            </Row>\r\n            <Row style={{ display: \"flex\" }}>\r\n                {mockData.webinars.map((webinar, i) => (\r\n                    <Col span={8} key={i} style={{ flex: 1 }}>\r\n                        <WebinarCard\r\n                            title={webinar.title}\r\n                            date={webinar.date}\r\n                            description={webinar.description}\r\n                            link={webinar.link}\r\n                        />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n            {/* Subsection Header */}\r\n            <Row>\r\n                <SectionHeader>Recommended for you</SectionHeader>\r\n            </Row>\r\n            <Row>\r\n                {mockData.gems.map((gem, i) => (\r\n                    <Col span={6} key={i}>\r\n                        <DataGemCard\r\n                            title={gem.title}\r\n                            image={gem.image}\r\n                            date={gem.date}\r\n                            link={gem.link}\r\n                        />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { CTX } from \"../context\"\r\nimport { Breadcrumbs, Link } from \"../components\"\r\nimport styled from \"styled-components\"\r\nimport { Row, Col } from \"antd\"\r\nimport { primary_color } from \"../theme/colors\"\r\n\r\nconst VideoContainer = styled.div`\r\n    position: relative;\r\n    padding-bottom: 56.25%;\r\n    padding-top: 30px;\r\n    height: 0;\r\n    overflow: hidden;\r\n`\r\n\r\nconst YoutubePlayer = styled.iframe`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 32px 32px 32px 0;\r\n`\r\n\r\nconst CallToActionBox = styled.div`\r\n    border: 2px solid hsl(213 65% 19%);\r\n    border-radius: 5px;\r\n    margin: 32px 0;\r\n    padding: 16px;\r\n    text-align: center;\r\n`\r\n\r\nconst CallToActionHeader = styled.h2`\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n    color: ${primary_color};\r\n`\r\n\r\nconst LinkStyles = {\r\n    color: \"white\",\r\n    fontSize: \"1.125rem\",\r\n    fontWeight: 500,\r\n    backgroundColor: \"#048392\",\r\n    padding: \"4px 8px\",\r\n    borderRadius: \"5px\",\r\n}\r\n\r\nconst HeaderOne = styled.h1`\r\n    font-size: 2rem;\r\n`\r\n\r\nconst HeaderTwo = styled.h2`\r\n    font-size: 1.5rem;\r\n    color: ${primary_color};\r\n`\r\n\r\nconst BodyText = styled.p`\r\n    font-size: 1.125rem;\r\n`\r\n\r\nexport const About = () => {\r\n    const { parse } = useContext(CTX)\r\n    const { URL_PATH } = parse()\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumbs path={URL_PATH} />\r\n            <Row>\r\n                <Col lg={16} sm={24}>\r\n                    <VideoContainer>\r\n                        <YoutubePlayer\r\n                            src=\"https://www.youtube.com/embed/QHQCbglb3FM\"\r\n                            title=\"YouTube video player for Census Academy\"\r\n                        ></YoutubePlayer>\r\n                    </VideoContainer>\r\n                </Col>\r\n                <Col lg={8} sm={24}>\r\n                    <CallToActionBox>\r\n                        <CallToActionHeader>\r\n                            Meet one on one with our Census Academy team\r\n                        </CallToActionHeader>\r\n                        <BodyText>\r\n                            Get personalized support and insider information by setting up an\r\n                            appointment with our experienced data analysts and technicians. This\r\n                            service is free for all interested data users.\r\n                        </BodyText>\r\n                        <a href=\"mailto: census.academy@census.gov\" style={LinkStyles}>\r\n                            Request Data Training\r\n                        </a>\r\n                    </CallToActionBox>\r\n                </Col>\r\n            </Row>\r\n            <div>\r\n                <HeaderOne>About Census Academy</HeaderOne>\r\n                <HeaderTwo>Mission Statement</HeaderTwo>\r\n                <BodyText>\r\n                    The Census Academy team is your virtual hub for learning data skills. We are\r\n                    made of a team that aims to give free, accessible data resources, information,\r\n                    and courses to all level of data users.\r\n                </BodyText>\r\n                <HeaderTwo>Our Materials</HeaderTwo>\r\n                <BodyText>\r\n                    Our team of experts is excited to share with you their favorite tips and tricks\r\n                    about how to access and use Census Bureau Data. Our materials will introduce you\r\n                    to various concepts and techniques to improve your ability to navigate our\r\n                    website and use our data-access tools.\r\n                </BodyText>\r\n                <BodyText>\r\n                    Drop us a line at{\" \"}\r\n                    <a href=\"mailto: census.academy@census.gov\">census.academy@census.gov</a> to let\r\n                    use us know what you think.\r\n                </BodyText>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { CTX } from \"../context\"\r\nimport { unified } from \"unified\"\r\nimport parse from \"remark-parse\"\r\nimport remark2react from \"remark-react\"\r\nimport styled from \"styled-components\"\r\nimport { primary_color } from \"../theme/colors\"\r\nimport { Row, Col } from \"antd\"\r\nimport { Link, Breadcrumbs } from \"../components\"\r\n\r\nconst Image = styled.img`\r\n    display: block;\r\n    width: 100%;\r\n    border-bottom: 2px solid ${primary_color};\r\n`\r\n\r\nconst CourseWrapper = styled.div`\r\n    margin: 0px 8px;\r\n    padding: 16px;\r\n    border: 1px solid ${primary_color};\r\n    border-radius: 4px;\r\n`\r\n\r\nconst CourseCardHeader = styled.h2`\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n    margin: 0;\r\n    display: inline-block;\r\n`\r\n\r\nconst LinkStyles = {\r\n    color: \"white\",\r\n    fontSize: \"1.125rem\",\r\n    fontWeight: 500,\r\n    backgroundColor: \"#048392\",\r\n    padding: \"4px 8px\",\r\n    borderRadius: \"5px\",\r\n    float: \"right\",\r\n}\r\n\r\nconst CourseCard = ({ image, title, date, link }) => {\r\n    return (\r\n        <CourseWrapper>\r\n            {image && <Image src={image} alt={title} />}\r\n            <CourseCardHeader>{title}</CourseCardHeader>\r\n            <Link href={link} style={LinkStyles}>\r\n                Start Course\r\n            </Link>\r\n        </CourseWrapper>\r\n    )\r\n}\r\n\r\nconst StyledHero = styled.div`\r\n    background: rgb(2, 0, 36);\r\n    background: linear-gradient(0deg, rgba(2, 0, 36, 1) 0%, rgba(4, 131, 146, 1) 80%);\r\n    text-align: center;\r\n    padding: 48px;\r\n\r\n    @media (max-width: 400px) {\r\n        margin-left: -20%;\r\n        margin-right: -20%;\r\n    }\r\n`\r\n\r\nconst HeroHeader = styled.h1`\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    margin: 0;\r\n    color: white;\r\n`\r\n\r\nconst HeroSubHeading = styled.p`\r\n    font-size: 1.25rem;\r\n    font-weight: 300;\r\n    text-align: center;\r\n    margin: 0;\r\n    color: white;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 8px 24px;\r\n`\r\n\r\nconst SectionHeading = styled.h2`\r\n    font-size: 1.75rem;\r\n    font-color ${primary_color};\r\n    font-weight: 500;\r\n`\r\n\r\nexport const Courses = ({ data }) => {\r\n    const context = useContext(CTX)\r\n    const { URL_PATH } = context.parse()\r\n    const items = data\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumbs path={URL_PATH} />\r\n            <Row>\r\n                <Col span={24}>\r\n                    <StyledHero>\r\n                        <HeroHeader>Courses</HeroHeader>\r\n                        <HeroSubHeading>\r\n                            Take courses with Census Academy to help build your knowledge and\r\n                            skillsets!\r\n                        </HeroSubHeading>\r\n                    </StyledHero>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Wrapper>\r\n                        <SectionHeading>All Courses</SectionHeading>\r\n                    </Wrapper>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ padding: \"0px 16px\", marginBottom: \"64px\" }} gutter={[8, 24]}>\r\n                {items.map((item, index) => {\r\n                    const { id } = item\r\n                    const assets = item?.assets?.items\r\n                    const date = Date.parse(item?.createdAt)\r\n                    const formattedDate = new Intl.DateTimeFormat(\"en-US\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"numeric\",\r\n                    }).format(date)\r\n                    const { cover, title, body } = assets.reduce(\r\n                        (a, c) => {\r\n                            const { type, name, content } = c\r\n                            switch (type) {\r\n                                case \"T_BODY\": {\r\n                                    const b = unified()\r\n                                        .use(parse)\r\n                                        .use(remark2react)\r\n                                        .processSync(content).result\r\n                                    return (a.body = b), a\r\n                                }\r\n                                case \"A_VIDEO\": {\r\n                                    const parts = content.split(\"/\")\r\n                                    const id = parts[parts.length - 1]\r\n                                    return (a.cover = `https://img.youtube.com/vi/${id}/0.jpg`), a\r\n                                }\r\n                                case \"A_IMAGE\":\r\n                                    return (a.cover = content), a\r\n                                case \"T_OG_TITLE\":\r\n                                    return (a.title = content), a\r\n                                default:\r\n                                    return a\r\n                            }\r\n                        },\r\n                        { cover: null, title: null, body: null }\r\n                    )\r\n\r\n                    return (\r\n                        <Col sm={24} key={index}>\r\n                            <CourseCard\r\n                                image={cover}\r\n                                title={title}\r\n                                date={formattedDate}\r\n                                link={`courses/${id}`}\r\n                            />\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { CTX } from \"../context\"\r\nimport styled from \"styled-components\"\r\nimport { unified } from \"unified\"\r\nimport parse from \"remark-parse\"\r\nimport remark2react from \"remark-react\"\r\nimport YouTube from \"react-youtube\"\r\nimport { Row, Col, Button } from \"antd\"\r\nimport { Breadcrumbs, Link } from \"../components\"\r\nimport { primary_color } from \"../theme/colors\"\r\n\r\nconst Wrapper = styled.div`\r\n    margin: 16px 64px;\r\n`\r\n\r\nconst StyledHero = styled(Col)`\r\n    background: rgb(2, 0, 36);\r\n    background: linear-gradient(0deg, rgba(2, 0, 36, 1) 0%, rgba(4, 131, 146, 1) 80%);\r\n    padding: 48px 32px;\r\n`\r\n\r\nconst HeroHeader = styled.h1`\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    margin: 0;\r\n    margin-left: 32px;\r\n    color: white;\r\n`\r\n\r\nconst HeroSubHeading = styled.h2`\r\n    font-size: 1.5rem;\r\n    font-weight: 300;\r\n    margin: 0;\r\n    margin-left: 32px;\r\n    color: white;\r\n`\r\n\r\nconst StyledParagraph = styled.p`\r\n    display: inline-block;\r\n    font-size: 1.125rem;\r\n    font-weight: bold;\r\n`\r\n\r\nconst StyledSpan = styled.span`\r\n    display: inline-block;\r\n    margin: 0 4px;\r\n    font-size: 1.125rem;\r\n`\r\n\r\nconst CourseInfo = styled.div`\r\n    text-align: center;\r\n    padding-top: 16px;\r\n    background: var(--amplify-primary-tint);\r\n    color: white;\r\n`\r\n\r\nconst LinkStyles = {\r\n    color: \"white\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: 500,\r\n    backgroundColor: \"#048392\",\r\n    margin: \"16px\",\r\n    padding: \"8px 16px\",\r\n    borderRadius: \"5px\",\r\n}\r\n\r\nexport const CourseOverview = ({ data }) => {\r\n    const context = useContext(CTX)\r\n    const { URL_PATH } = context.parse()\r\n\r\n    const { T_OG_DESCRIPTION, T_BODY, T_OG_TITLE, courseId } = data\r\n    const title = T_OG_TITLE?.content\r\n    const body = unified().use(parse).use(remark2react).processSync(T_BODY?.content).result\r\n\r\n    return (\r\n        <div style={{ margin: \"0px 192px\" }}>\r\n            <Breadcrumbs path={URL_PATH} />\r\n            <Row>\r\n                <StyledHero lg={24} md={24} sm={24}>\r\n                    <HeroHeader>{title}</HeroHeader>\r\n                    <HeroSubHeading>{T_OG_DESCRIPTION?.content}</HeroSubHeading>\r\n                    <div style={{ marginLeft: \"16px\", marginTop: \"24px\" }}>\r\n                        <Link href={`courses/${courseId}/home`} style={LinkStyles}>\r\n                            Start Course\r\n                        </Link>\r\n                        {/* User accounts and saving content not fully built out;\r\n                            lets comment this button/link out until it's done */}\r\n                        {/* <Link href=\"#\" style={LinkStyles}>\r\n                            Save for Later\r\n                        </Link> */}\r\n                    </div>\r\n                </StyledHero>\r\n                {/* in the mockup there's an SVG here */}\r\n                {/* <StyledHero lg={6} md={24} sm={24}>\r\n                    icon\r\n                </StyledHero> */}\r\n            </Row>\r\n            <CourseInfo>\r\n                {/* How should we store this information -- separate assets on the\r\n                node? What type should we give those assets? */}\r\n                <StyledParagraph>Skill level: {\"Beginner\"}</StyledParagraph>\r\n                <StyledSpan>|</StyledSpan>\r\n                <StyledParagraph>Duration: {\"0-1 Hour\"}</StyledParagraph>\r\n                <StyledSpan>|</StyledSpan>\r\n                <StyledParagraph>Content: {\"14 Videos\"}</StyledParagraph>\r\n                <StyledSpan>|</StyledSpan>\r\n                <StyledParagraph>Rewards: {\"Certificate and 2 Badges\"}</StyledParagraph>\r\n            </CourseInfo>\r\n            <Wrapper>\r\n                <h2 style={{ fontWeight: 500 }}>Course Description</h2>\r\n                {body}\r\n            </Wrapper>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useContext } from \"react\"\r\nimport { CTX } from \"../context\"\r\nimport { CourseHome, CourseModule, CourseSubmodule, Breadcrumbs, Link } from \"../components\"\r\nimport { Layout, Menu } from \"antd\"\r\n\r\nconst { Content, Sider } = Layout\r\nconst { SubMenu } = Menu\r\n\r\nexport const Course = ({ data }) => {\r\n    const context = useContext(CTX)\r\n    const { URL_PATH } = context.parse()\r\n    const {\r\n        T_OG_TITLE,\r\n        T_OG_DESCRIPTION,\r\n        T_BODY,\r\n        modules,\r\n        submodules,\r\n        courseId,\r\n        path,\r\n        prev,\r\n        next,\r\n    } = data\r\n    let displayComponent\r\n\r\n    if (path.pop() === \"home\") {\r\n        displayComponent = (\r\n            <CourseHome\r\n                courseTitle={T_OG_TITLE.content}\r\n                courseDescription={T_BODY.content}\r\n                modules={modules}\r\n                courseId={courseId}\r\n            />\r\n        )\r\n    } else if (path[2] === \"module\") {\r\n        displayComponent = (\r\n            <CourseModule\r\n                courseId={courseId}\r\n                moduleTitle={T_OG_TITLE?.content}\r\n                moduleDescription={T_OG_DESCRIPTION?.content}\r\n                submodules={submodules}\r\n            />\r\n        )\r\n    } else if (path[2] === \"submodule\") {\r\n        displayComponent = <CourseSubmodule submodule={data} prev={prev[0]} next={next[0]} />\r\n    }\r\n\r\n    return (\r\n        <Layout style={{ margin: \"32px\" }}>\r\n            {/* these min and max heights are placeholders -- not sure how sidebar nav\r\n                will look given courses with many, many modules...could be better to\r\n                not have these styles at all */}\r\n            <Sider style={{ background: \"white\", minHeight: \"400px\", maxHeight: \"600px\" }}>\r\n                {/* populate sidebar with sections and navigation */}\r\n                <Menu mode=\"inline\">\r\n                    <Menu.Item key={courseId}>\r\n                        <Link href={`courses/${courseId}/home`}>Course Home</Link>\r\n                    </Menu.Item>\r\n                    {/* TODO\r\n                        write logic to get nodes connected to module nodes\r\n                        then display submodule titles in submenu items that a user\r\n                        can directly navigate to if desired, based on antd example:\r\n                        https://ant.design/components/layout/#components-layout-demo-top-side\r\n                     */}\r\n                    {modules.map(module => (\r\n                        <Menu.Item key={module.node.id}>\r\n                            <Link href={`courses/${courseId}/module/${module.node.id}`}>\r\n                                {module.node.id}\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    ))}\r\n                </Menu>\r\n            </Sider>\r\n            <Content style={{ marginLeft: \"16px\", maxWidth: \"1400px\" }}>\r\n                <Breadcrumbs path={URL_PATH} />\r\n                {displayComponent}\r\n            </Content>\r\n        </Layout>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { Result, Button } from \"antd\"\r\nimport { Link } from \"../components\"\r\n\r\nexport const Error404 = () => (\r\n    <Result\r\n        status=\"404\"\r\n        title=\"404\"\r\n        subTitle=\"Sorry, the page you visited does not exist.\"\r\n        extra={<a href=\"/\">Back Home</a>}\r\n    />\r\n)\r\n","import React, { useState, useEffect } from \"react\"\r\nimport { AuthState, onAuthUIStateChange } from \"@aws-amplify/ui-components\"\r\nimport { run$ } from \"@-0/spool\"\r\nimport { $store$, registerRouterDOM, DOMnavigated$ } from \"@-0/browser\"\r\nimport { URL2obj, diff_keys } from \"@-0/utils\"\r\nimport * as K from \"@-0/keys\"\r\n\r\nimport { CTX } from \"../context\"\r\nimport { log } from \"../utils\"\r\nimport { Landing } from \"../pages\"\r\nimport { useCursor } from \"../hooks\"\r\n\r\n//prettier-ignore\r\nexport const Provider = ({ children, CFG = {} }) => {\r\n   \r\n    //const DOMRoot     = CFG[K.CFG_ROOT] || document.body \r\n    // ⬆ ⚠ can't refer to the root node (circular reference)\r\n\r\n    // default wrapper for pages before they are specified\r\n    const DefaultView = CFG[K.CFG_VIEW] || Landing\r\n    const router      = CFG[K.CFG_RUTR]\r\n    // clean URL\r\n    const knowns      = Object.values(K.CFG) || []\r\n    const prfx        = router[K.RTR_PRFX] || null\r\n    const [, others]  = diff_keys(knowns, CFG)\r\n    const escRGX      = /[-/\\\\^$*+?.()|[\\]{}]/g\r\n    const escaped     = str => str.replace(escRGX, \"\\\\$&\")\r\n    const RGX         = prfx ? new RegExp(escaped(prfx || \"\"), \"g\") : null\r\n\r\n\r\n\r\n    if (router) registerRouterDOM(router)\r\n    else throw new Error(`no \\`${K.CFG_RUTR}\\`: router found in Provider CFG`)\r\n    \r\n    // Prime store with CFG state\r\n    $store$.swap(x => ({...CFG, ...x}))\r\n\r\n    // FIXME: log\r\n    //log(\"$store$.deref():\", $store$.deref() )\r\n\r\n    return (\r\n        <CTX.Provider value={{\r\n            $store$,\r\n            parse: () => URL2obj(window.location.href, RGX),\r\n            authState: null,\r\n            user: null\r\n          }}>\r\n            { children }\r\n        </CTX.Provider>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from \"react\"\r\nimport { Breadcrumb } from \"antd\"\r\nimport { CTX } from \"../context\"\r\n\r\nexport const Breadcrumbs = ({ path }) => {\r\n    return (\r\n        <Breadcrumb style={{ margin: \"16px 0\", textTransform: \"capitalize\" }}>\r\n            <Breadcrumb.Item>Census Academy</Breadcrumb.Item>\r\n            {path.map((crumb, i) => (\r\n                <Breadcrumb.Item key={i}>{crumb}</Breadcrumb.Item>\r\n            ))}\r\n        </Breadcrumb>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\"\r\nimport { AmplifyAuthenticator, AmplifySignIn, AmplifySignUp } from \"@aws-amplify/ui-react\"\r\nimport { run$ } from \"@-0/spool\"\r\nimport { Auth } from \"@aws-amplify/auth\"\r\nimport { Hub } from \"@aws-amplify/core\"\r\nimport { CTX } from \"../context\"\r\nimport { NAV } from \"../commands\"\r\nimport { Link } from \"./Link\"\r\n\r\nexport const SignInButton = ({ style = {} }) => {\r\n    return (\r\n        <Link href=\"sign-in\" style={style}>\r\n            Sign In\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport const SignOutButton = ({ style = {} }) => {\r\n    //const { run$ } = useContext(CTX)\r\n    return (\r\n        <a\r\n            href=\"/\"\r\n            onClick={async e => {\r\n                e.preventDefault()\r\n                try {\r\n                    await Auth.signOut()\r\n                    // channel must be 'UI Auth'\r\n                    await Hub.dispatch(\"UI Auth\", {\r\n                        // event must be 'AuthStateChange'\r\n                        event: \"AuthStateChange\",\r\n                        // message must be 'signedout'\r\n                        message: \"signedout\",\r\n                    })\r\n                    run$.next({ ...NAV, args: e })\r\n                } catch (error) {\r\n                    console.log(\"error signing out: \", error)\r\n                }\r\n            }}\r\n            style={{ cursor: \"pointer\", ...style }}\r\n        >\r\n            Sign out\r\n        </a>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Collapse } from \"antd\"\r\nimport { Link } from \"..\"\r\nimport { unified } from \"unified\"\r\nimport parse from \"remark-parse\"\r\nimport remark2react from \"remark-react\"\r\nimport { convert_assets_to_object } from \"../../utils\"\r\n\r\nconst { Panel } = Collapse\r\n\r\nconst StyledTitle = styled.h1`\r\n    font-size: 1.5rem;\r\n`\r\n\r\nconst CourseDescription = styled.div`\r\n    font-size: 1rem;\r\n    background: white;\r\n    padding: 8px;\r\n    border: thin solid #d9d9d9;\r\n    margin-bottom: 16px;\r\n`\r\n\r\nconst LinkStyles = {\r\n    color: \"white\",\r\n    fontSize: \".8rem\",\r\n    fontWeight: 500,\r\n    backgroundColor: \"#048392\",\r\n    padding: \"4px 8px\",\r\n    borderRadius: \"5px\",\r\n    float: \"right\",\r\n    bottom: \"32px\",\r\n}\r\n\r\nexport const CourseHome = ({ courseTitle, courseDescription, modules, courseId }) => {\r\n    // TODO make this page mobile friendly!!!\r\n    // the antd Layout component is not mobile friendly!!\r\n    const body = unified().use(parse).use(remark2react).processSync(courseDescription).result\r\n\r\n    return (\r\n        <>\r\n            {/* populate content with overview of each submodule */}\r\n            <StyledTitle>{courseTitle}</StyledTitle>\r\n            <CourseDescription>{body}</CourseDescription>\r\n            <Collapse>\r\n                {modules.map(module => {\r\n                    const items = convert_assets_to_object(module.node.assets.items)\r\n                    const { T_OG_DESCRIPTION } = items\r\n                    const description = unified()\r\n                        .use(parse)\r\n                        .use(remark2react)\r\n                        .processSync(T_OG_DESCRIPTION?.content).result\r\n\r\n                    return (\r\n                        <Panel\r\n                            key={module.node.id}\r\n                            // for the header currently just using node id\r\n                            // however what would likely be a better choice is\r\n                            // using a T_OG_TITLE asset on the node\r\n                            header={module.node.id}\r\n                        >\r\n                            <p>What this module will cover:</p>\r\n                            {T_OG_DESCRIPTION ? description : \"\"}\r\n                            <Link\r\n                                href={`courses/${courseId}/module/${module.node.id}`}\r\n                                style={LinkStyles}\r\n                            >\r\n                                Go to Module\r\n                            </Link>\r\n                        </Panel>\r\n                    )\r\n                })}\r\n            </Collapse>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Collapse } from \"antd\"\r\nimport { Link } from \"..\"\r\nimport { unified } from \"unified\"\r\nimport parse from \"remark-parse\"\r\nimport remark2react from \"remark-react\"\r\nimport { convert_assets_to_object } from \"../../utils\"\r\n\r\nconst { Panel } = Collapse\r\n\r\nconst StyledTitle = styled.h1`\r\n    font-size: 1.5rem;\r\n`\r\n\r\nconst SectionTitle = styled.h2`\r\n    font-size: 1rem;\r\n`\r\n\r\nconst SectionWrapper = styled.div`\r\n    font-size: 1rem;\r\n    background: white;\r\n    padding: 8px;\r\n    border: thin solid #d9d9d9;\r\n    margin-bottom: 16px;\r\n    max-width: 1000px;\r\n`\r\n\r\nconst StyledItem = styled.li`\r\n    list-style-type: circle;\r\n    margin-left: 32px;\r\n`\r\n\r\nexport const CourseModule = ({ courseId, moduleTitle, moduleDescription, submodules }) => {\r\n    return (\r\n        <>\r\n            <StyledTitle>{moduleTitle ? moduleTitle : \"Module Title\"}</StyledTitle>\r\n            {/* this lorem ipsum text should be replaced with a T_OG_DESCRIPTION asset that is\r\n                attached to a module node */}\r\n            {moduleDescription && (\r\n                <SectionWrapper>\r\n                    <SectionTitle>Module Description</SectionTitle>\r\n                    <p>{moduleDescription}</p>\r\n                </SectionWrapper>\r\n            )}\r\n\r\n            <SectionWrapper>\r\n                <SectionTitle>Module Content</SectionTitle>\r\n                <ol>\r\n                    {submodules.map(submodule => {\r\n                        const items = convert_assets_to_object(submodule.node.assets.items)\r\n                        const { T_OG_TITLE } = items\r\n                        return (\r\n                            <StyledItem key={submodule.node.id}>\r\n                                <Link href={`courses/${courseId}/submodule/${submodule.node.id}`}>\r\n                                    {T_OG_TITLE ? T_OG_TITLE.content : submodule.node.id}\r\n                                </Link>\r\n                            </StyledItem>\r\n                        )\r\n                    })}\r\n                </ol>\r\n            </SectionWrapper>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport YouTube from \"react-youtube\"\r\nimport { unified } from \"unified\"\r\nimport parse from \"remark-parse\"\r\nimport remark2react from \"remark-react\"\r\nimport { Link } from \"../../components/Link\"\r\n\r\nconst SectionWrapper = styled.div`\r\n    font-size: 1rem;\r\n    background: white;\r\n    padding: 16px;\r\n    border: thin solid #d9d9d9;\r\n    margin-bottom: 16px;\r\n    max-width: 1000px;\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    max-width: 650px;\r\n    margin: 16px 0;\r\n`\r\n\r\nconst StyledHeader = styled.h1`\r\n    font-size: 1.125rem;\r\n    display: inline;\r\n`\r\n\r\nconst LinkStyles = {\r\n    display: \"inline\",\r\n    float: \"right\",\r\n    margin: \"0 8px\",\r\n}\r\n\r\nexport const CourseSubmodule = ({ submodule, prev, next }) => {\r\n    const { T_OG_TITLE, T_BODY, A_VIDEO } = submodule\r\n    const id = A_VIDEO?.content.split(\"/\").pop()\r\n    const body = unified().use(parse).use(remark2react).processSync(T_BODY?.content).result\r\n\r\n    // TODO\r\n    // should have more robust ways to check assets attached to a node\r\n    // and render + lay them out appropriately (e.g. similar to how we\r\n    // handle content preview on COPE)\r\n    return (\r\n        <SectionWrapper>\r\n            <StyledHeader>{T_OG_TITLE ? T_OG_TITLE.content : \"Course Submodule\"}</StyledHeader>\r\n            {next && (\r\n                <Link\r\n                    style={LinkStyles}\r\n                    // TODO refactor!!\r\n                    // not a clean implementation!! next and prev are arrays with\r\n                    // objects in them, when we really would just like the object\r\n                    // this works for now but really need to refactor this\r\n                    href={`courses/${submodule.courseId}/submodule/${next.toNode}`}\r\n                >\r\n                    Next\r\n                </Link>\r\n            )}\r\n            {prev && (\r\n                <Link\r\n                    style={LinkStyles}\r\n                    href={`courses/${submodule.courseId}/submodule/${prev.fromNode}`}\r\n                >\r\n                    Previous\r\n                </Link>\r\n            )}\r\n\r\n            {A_VIDEO && (\r\n                <Wrapper>\r\n                    <YouTube videoId={id} />\r\n                </Wrapper>\r\n            )}\r\n\r\n            {T_BODY && body}\r\n        </SectionWrapper>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { AuthState, onAuthUIStateChange } from \"@aws-amplify/ui-components\"\r\nimport { Hub } from \"@aws-amplify/core\"\r\nimport { Auth } from \"@aws-amplify/auth\"\r\nimport { trace, stream } from \"@thi.ng/rstream\"\r\nimport { out$, log$, registerCMD } from \"@-0/spool\"\r\nimport { NAV } from \"./commands\"\r\n\r\nimport { log } from \"./utils\"\r\nimport { Chrome, View } from \"./components\"\r\n\r\nconst HUB = stream()\r\n\r\nconst AUTH_REDIR = registerCMD({\r\n    sub$ : \"AUTH_REDIR\",\r\n    args : payload => payload,\r\n    src$ : HUB,\r\n    work : ({ data, event, message }) => {\r\n        console.log({ data, event, message })\r\n        if (event === \"signIn\") {\r\n            window.history.back()\r\n            return false\r\n        }\r\n    },\r\n})\r\n// default value ({ run$  }) is applied when no Provider is found in the inheritance tree of the component (orphans)\r\n\r\n//log$.subscribe(trace(\"log$:\"))\r\n\r\nconst App = () => {\r\n    let [ authUser, setAuthUser ] = useState(null)\r\n    useEffect(() => {\r\n        const update = async AS => {\r\n            try {\r\n                let user = await Auth.currentAuthenticatedUser()\r\n                setAuthUser(user)\r\n            } catch (e) {\r\n                setAuthUser(null)\r\n            }\r\n        }\r\n        Hub.listen(\"auth\", data => {\r\n            const { payload } = data\r\n            update(data)\r\n            //console.log({ payload })\r\n            HUB.next(payload)\r\n        })\r\n        update() // check manually once\r\n        return () => Hub.remove(\"auth\", update)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Chrome authUser={authUser}>\r\n                <View />\r\n            </Chrome>\r\n        </div>\r\n    )\r\n}\r\n\r\nlog(\"registered Commands:\", out$.topics.entries())\r\n\r\nlog(\"starting...\")\r\n\r\nexport default App\r\n","const awsmobile = {\r\n    aws_project_region: \"us-east-1\",\r\n    aws_cognito_identity_pool_id: \"us-east-1:5eb24d32-7dcf-4eec-b2cf-3ccb80538edb\",\r\n    aws_cognito_region: \"us-east-1\",\r\n    aws_user_pools_id: \"us-east-1_pDcWh9rz6\",\r\n    aws_user_pools_web_client_id: \"119jhi81t735520srasmqrjsf5\",\r\n    oauth: {},\r\n    aws_cloud_logic_custom: [\r\n        {\r\n            name: \"AdminQueries\",\r\n            endpoint: \"https://pmf4yj9q8j.execute-api.us-east-1.amazonaws.com/dev\",\r\n            region: \"us-east-1\",\r\n        },\r\n    ],\r\n    aws_appsync_graphqlEndpoint:\r\n        \"https://ug3flqmddnbevnzihtnbxfw464.appsync-api.us-east-1.amazonaws.com/graphql\",\r\n    aws_appsync_region: \"us-east-1\",\r\n    aws_appsync_authenticationType: \"API_KEY\",\r\n    aws_appsync_apiKey: \"da2-pnoc2ogp6fc47oiletkzyoad7e\",\r\n    aws_user_files_s3_bucket: \"cope-storage-bucket180042-dev\",\r\n    aws_user_files_s3_bucket_region: \"us-east-1\",\r\n}\r\n\r\nexport default awsmobile\r\n","import { API } from \"cope-client-utils\"\r\n\r\nconst type = API.NodeType\r\nexport const getNodesByType = /* GraphQL */ `\r\n    query getNodesByType($type: NodeType!, $status: NodeStatus!) {\r\n        nodesByStatusType(status: $status, typeCreatedAt: { beginsWith: { type: $type } }) {\r\n            items {\r\n                id\r\n                type\r\n                createdAt\r\n                assets {\r\n                    items {\r\n                        type\r\n                        name\r\n                        content\r\n                        index\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const getNodeByID = /* GraphQL */ `\r\n    query getNodeByID($id: ID!) {\r\n        getNode(id: $id) {\r\n            status\r\n            type\r\n            createdAt\r\n            updatedAt\r\n            owner\r\n            assets {\r\n                items {\r\n                    type\r\n                    name\r\n                    content\r\n                    index\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport const getConnectedNodes = /* GraphQL */ `\r\n    query getNodeByID($id: ID!) {\r\n        getNode(id: $id) {\r\n            edges {\r\n                items {\r\n                    edge {\r\n                        type\r\n                        nodes {\r\n                            items {\r\n                                node {\r\n                                    id\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n","//import { getIn } from \"@thi.ng/paths\"\r\nimport { EquivMap } from \"@thi.ng/associative\"\r\nimport { useContext } from \"react\"\r\nimport { URL2obj } from \"@-0/utils\"\r\nimport * as K from \"@-0/keys\"\r\nimport { registerCMD } from \"@-0/spool\"\r\nimport { cmd_inject_head } from \"@-0/browser\"\r\nimport { Auth } from \"@aws-amplify/auth\"\r\nimport { GRAPHQL_AUTH_MODE } from \"@aws-amplify/api\"\r\nimport { node, API, utils } from \"cope-client-utils\"\r\n//import { Chrome } from \"../layout\"\r\nimport { queries } from \"../graphql\"\r\nimport { log, convert_assets_to_object } from \"../utils\"\r\nimport { SignIn, Gems, Landing, Gem, Error404, Course } from \"../pages\"\r\nimport { UserDashboard } from \"../pages\"\r\nimport { Courses, CourseOverview } from \"../pages\"\r\nimport { About } from \"../pages\"\r\nimport { EdgeType, NodeStatus, NodeType } from \"cope-client-utils/lib/graphql/API\"\r\nimport { builtinModules } from \"module\"\r\n\r\nconst { CRUD } = utils\r\nconst dummy_query = {\r\n    // prettier-ignore\r\n    query: /* GraphQL */ `\r\n        query getNode($id: ID!){\r\n            getNode(id: $id){\r\n                id\r\n                type\r\n            }\r\n        }\r\n        `,\r\n    variables: { id: \"testNode1\" },\r\n    authMode: GRAPHQL_AUTH_MODE.API_KEY,\r\n}\r\n\r\nconst publicQuery = ({ query, variables }) =>\r\n    CRUD({ query, variables, authMode: GRAPHQL_AUTH_MODE.API_KEY })\r\n\r\n// TODO: return types expected for routerCfg\r\nexport const routerCfg = async url => {\r\n    const session = await Auth.Credentials\r\n    console.log(\"session:\", { session })\r\n    const match = URL2obj(url)\r\n    const { URL_DOMN, URL_FULL, URL_HASH, URL_PATH, URL_QERY, URL_SUBD } = match\r\n\r\n    //console.log({ match })\r\n    //let { } = URL_QERY\r\n\r\n    //limit = parseInt(limit)\r\n    //const path = match[K.URL_PATH]\r\n\r\n    const sign_in = {\r\n        URL_DATA: () => ({\r\n            DOM_HEAD: {},\r\n            DOM_BODY: {},\r\n        }),\r\n        URL_PAGE: \"home\",\r\n    }\r\n\r\n    const gems_path = [\"gems\", ...URL_PATH.slice(1)]\r\n    const courses_path = [\"courses\", ...URL_PATH.slice(1)]\r\n    const RES =\r\n        //!session ? sign_in :\r\n        new EquivMap(\r\n            [\r\n                [\r\n                    { ...match, URL_PATH: gems_path },\r\n                    {\r\n                        URL_DATA: async () => {\r\n                            // gems landing\r\n                            if (gems_path.length === 1) {\r\n                                const res = await publicQuery({\r\n                                    query: queries.getNodesByType,\r\n                                    variables: { type: NodeType.A_GEM, status: NodeStatus.DRAFT },\r\n                                })\r\n                                return {\r\n                                    DOM_HEAD: {\r\n                                        title: \"Data Gems\",\r\n                                        og_description: \"Bite-sized courses for Census data users\",\r\n                                    },\r\n                                    DOM_BODY: res?.data?.nodesByStatusType?.items,\r\n                                }\r\n                            }\r\n                            // gem focus page\r\n                            if (gems_path.length === 2) {\r\n                                const id = gems_path[1]\r\n                                const res = await publicQuery({\r\n                                    query: queries.getNodeByID,\r\n                                    variables: { id },\r\n                                })\r\n                                const {\r\n                                    data: { getNode },\r\n                                } = res\r\n                                const { status, type, createdAt, updatedAt, owner, assets } =\r\n                                    getNode\r\n                                if (assets.items) {\r\n                                    const items = convert_assets_to_object(assets.items)\r\n                                    const { T_OG_TITLE, A_VIDEO, T_BODY } = items\r\n                                    return {\r\n                                        DOM_HEAD: {\r\n                                            title: T_OG_TITLE.content,\r\n                                        },\r\n                                        DOM_BODY: { ...items, date: createdAt },\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        URL_PAGE: () => {\r\n                            if (gems_path.length === 1) return Gems\r\n                            if (gems_path.length === 2) return Gem\r\n                        },\r\n                    },\r\n                ],\r\n                [\r\n                    { ...match, URL_PATH: courses_path },\r\n                    {\r\n                        URL_DATA: async () => {\r\n                            // courses landing\r\n                            if (courses_path.length === 1) {\r\n                                // TODO replace this with course query\r\n                                const res = await publicQuery({\r\n                                    query: queries.getNodesByType,\r\n                                    variables: {\r\n                                        type: NodeType.C_COURSES,\r\n                                        status: NodeStatus.DRAFT,\r\n                                    },\r\n                                })\r\n                                return {\r\n                                    DOM_HEAD: {\r\n                                        title: \"Courses\",\r\n                                        og_description:\r\n                                            \"Free courses to teach you how to use Census data. Learn how to use the US Census Bureau's free data for work, school, or other projects.\",\r\n                                    },\r\n                                    DOM_BODY: res?.data?.nodesByStatusType?.items,\r\n                                }\r\n                            }\r\n                            // courses focus page\r\n                            if (courses_path.length === 2) {\r\n                                const id = courses_path[1]\r\n                                const res = await publicQuery({\r\n                                    query: queries.getNodeByID,\r\n                                    variables: { id },\r\n                                })\r\n                                const {\r\n                                    data: { getNode },\r\n                                } = res\r\n                                const { status, type, createdAt, updatedAt, owner, assets } =\r\n                                    getNode\r\n                                if (assets.items) {\r\n                                    const items = convert_assets_to_object(assets.items)\r\n                                    const { T_OG_TITLE, A_VIDEO, T_BODY } = items\r\n                                    return {\r\n                                        DOM_HEAD: {\r\n                                            title: T_OG_TITLE.content,\r\n                                        },\r\n                                        DOM_BODY: {\r\n                                            ...items,\r\n                                            date: createdAt,\r\n                                            courseId: id,\r\n                                            path: courses_path,\r\n                                        },\r\n                                    }\r\n                                }\r\n                            }\r\n                            // courses home page\r\n                            if (courses_path.length === 3) {\r\n                                const courseId = courses_path[1]\r\n                                const courseNodeInfo = await publicQuery({\r\n                                    query: queries.getNodeByID,\r\n                                    variables: { id: courseId },\r\n                                })\r\n                                const {\r\n                                    data: { getNode },\r\n                                } = courseNodeInfo\r\n                                const { status, type, createdAt, updatedAt, owner, assets } =\r\n                                    getNode\r\n                                const modules = await node.connections(\r\n                                    {\r\n                                        id: courseId,\r\n                                        edgeType: EdgeType.HAS_PART,\r\n                                    },\r\n                                    GRAPHQL_AUTH_MODE.API_KEY\r\n                                )\r\n\r\n                                if (assets.items) {\r\n                                    const items = convert_assets_to_object(assets.items)\r\n                                    const { T_OG_TITLE } = items\r\n                                    return {\r\n                                        DOM_HEAD: {\r\n                                            title: T_OG_TITLE.content,\r\n                                        },\r\n                                        DOM_BODY: {\r\n                                            ...items,\r\n                                            date: createdAt,\r\n                                            courseId: courseId,\r\n                                            path: courses_path,\r\n                                            modules: modules,\r\n                                        },\r\n                                    }\r\n                                }\r\n                            }\r\n                            // courses module page\r\n                            if (courses_path.length === 4 && courses_path[2] === \"module\") {\r\n                                // to populate sidebar nav\r\n                                const courseId = courses_path[1]\r\n                                const modules = await node.connections(\r\n                                    {\r\n                                        id: courseId,\r\n                                        edgeType: EdgeType.HAS_PART,\r\n                                    },\r\n                                    GRAPHQL_AUTH_MODE.API_KEY\r\n                                )\r\n\r\n                                const moduleId = courses_path[3]\r\n                                const moduleNodeInfo = await publicQuery({\r\n                                    query: queries.getNodeByID,\r\n                                    variables: { id: moduleId },\r\n                                })\r\n                                const {\r\n                                    data: { getNode },\r\n                                } = moduleNodeInfo\r\n                                const { status, type, createdAt, updatedAt, owner, assets } =\r\n                                    getNode\r\n                                const submodules = await node.connections(\r\n                                    {\r\n                                        id: moduleId,\r\n                                        edgeType: EdgeType.HAS_CHILD,\r\n                                    },\r\n                                    GRAPHQL_AUTH_MODE.API_KEY\r\n                                )\r\n\r\n                                if (assets.items) {\r\n                                    const items = convert_assets_to_object(assets.items)\r\n                                    const { T_OG_TITLE } = items\r\n                                    // not all nodes are guaranteed to have a T_OG_TITLE\r\n                                    const title = T_OG_TITLE ? T_OG_TITLE.content : moduleId\r\n                                    return {\r\n                                        DOM_HEAD: {\r\n                                            title: title,\r\n                                        },\r\n                                        DOM_BODY: {\r\n                                            ...items,\r\n                                            path: courses_path,\r\n                                            courseId: courseId,\r\n                                            modules: modules,\r\n                                            submodules: submodules,\r\n                                        },\r\n                                    }\r\n                                }\r\n                            }\r\n                            // courses submodule page\r\n                            if (courses_path.length === 4 && courses_path[2] === \"submodule\") {\r\n                                // to populate sidebar nav\r\n                                const courseId = courses_path[1]\r\n                                const modules = await node.connections(\r\n                                    {\r\n                                        id: courseId,\r\n                                        edgeType: EdgeType.HAS_PART,\r\n                                    },\r\n                                    GRAPHQL_AUTH_MODE.API_KEY\r\n                                )\r\n\r\n                                const moduleId = courses_path[3]\r\n                                const moduleNodeInfo = await publicQuery({\r\n                                    query: queries.getNodeByID,\r\n                                    variables: { id: moduleId },\r\n                                })\r\n                                const {\r\n                                    data: { getNode },\r\n                                } = moduleNodeInfo\r\n                                const { status, type, createdAt, updatedAt, owner, assets } =\r\n                                    getNode\r\n\r\n                                const connectedNodes = await publicQuery({\r\n                                    query: queries.getConnectedNodes,\r\n                                    variables: { id: moduleId },\r\n                                })\r\n\r\n                                const next = connectedNodes?.data?.getNode?.edges?.items\r\n                                    .filter(item => item.edge.type === \"HAS_NEXT\")\r\n                                    .map(item => ({\r\n                                        type: item.edge.type,\r\n                                        fromNode: item.edge.nodes.items[0].node.id,\r\n                                        toNode: item.edge.nodes.items[1].node.id,\r\n                                    }))\r\n                                    .filter(item => item.fromNode === moduleId)\r\n\r\n                                const prev = connectedNodes?.data?.getNode?.edges?.items\r\n                                    .filter(item => item.edge.type === \"HAS_PREVIOUS\")\r\n                                    .map(item => ({\r\n                                        type: item.edge.type,\r\n                                        fromNode: item.edge.nodes.items[0].node.id,\r\n                                        toNode: item.edge.nodes.items[1].node.id,\r\n                                    }))\r\n                                    .filter(item => item.toNode === moduleId)\r\n\r\n                                if (assets.items) {\r\n                                    const items = convert_assets_to_object(assets.items)\r\n                                    const { T_OG_TITLE } = items\r\n                                    // not all nodes are guaranteed to have a T_OG_TITLE\r\n                                    const title = T_OG_TITLE ? T_OG_TITLE.content : moduleId\r\n                                    return {\r\n                                        DOM_HEAD: {\r\n                                            title: title,\r\n                                        },\r\n                                        DOM_BODY: {\r\n                                            ...items,\r\n                                            path: courses_path,\r\n                                            courseId: courseId,\r\n                                            modules: modules,\r\n                                            next: next,\r\n                                            prev: prev,\r\n                                        },\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        URL_PAGE: () => {\r\n                            if (courses_path.length === 1) return Courses\r\n                            if (courses_path.length === 2) return CourseOverview\r\n                            if (courses_path.length === 3) return Course\r\n                            if (courses_path.length === 4) return Course\r\n                        },\r\n                    },\r\n                ],\r\n                [\r\n                    // home page (path = [])\r\n                    { ...match, [K.URL_PATH]: [] },\r\n                    {\r\n                        [K.URL_DATA]: async () => {\r\n                            const list = await utils.CRUD(dummy_query)\r\n\r\n                            //  console.log({ list })\r\n                            return {\r\n                                [K.DOM_HEAD]: {\r\n                                    [K.HD_TITL]: \"Census Academy\",\r\n                                    [K.OG_DESC]:\r\n                                        \"Free courses to teach you how to use Census data. Learn how to use the US Census Bureau's free data for work, school, or other projects.\",\r\n                                    //img_url,\r\n                                },\r\n                                [K.DOM_BODY]: { data: list },\r\n                            }\r\n                        },\r\n                        [K.URL_PAGE]: () => Landing,\r\n                    },\r\n                ],\r\n                [\r\n                    { ...match, URL_PATH: [\"sign-in\"] },\r\n                    {\r\n                        URL_DATA: async () => {\r\n                            const list = await utils.CRUD(dummy_query)\r\n                            return {\r\n                                DOM_HEAD: {\r\n                                    title: \"Page 1\",\r\n                                    og_description: \"Description for Open Graph/sharing\",\r\n                                },\r\n                                DOM_BODY: { data: list },\r\n                            }\r\n                        },\r\n                        URL_PAGE: () => SignIn,\r\n                    },\r\n                ],\r\n                [\r\n                    { ...match, URL_PATH: [\"user\"] },\r\n                    {\r\n                        URL_DATA: async () => {\r\n                            const list = await utils.CRUD(dummy_query)\r\n                            return {\r\n                                DOM_HEAD: {\r\n                                    title: \"Mock User Profile\",\r\n                                    og_description: \"Mock of user profile page\",\r\n                                },\r\n                                DOM_BODY: { data: list },\r\n                            }\r\n                        },\r\n                        URL_PAGE: () => UserDashboard,\r\n                    },\r\n                ],\r\n                [\r\n                    { ...match, URL_PATH: [\"about\"] },\r\n                    {\r\n                        URL_DATA: async () => {\r\n                            const list = await utils.CRUD(dummy_query)\r\n                            return {\r\n                                DOM_HEAD: {\r\n                                    title: \"About Census Academy\",\r\n                                    og_description:\r\n                                        \"Free courses to teach you how to use Census data. Learn how to use the US Census Bureau's free data for work, school, or other projects.\",\r\n                                },\r\n                                DOM_BODY: { data: list },\r\n                            }\r\n                        },\r\n                        URL_PAGE: () => About,\r\n                    },\r\n                ],\r\n            ]\r\n            // TODO: create actual 404 Page\r\n        ).get(match) || {\r\n            [K.URL_DATA]: () => ({ DOM_HEAD: { title: \"404\" }, DOM_BODY: { data: 404 } }),\r\n            [K.URL_PAGE]: () => Error404,\r\n        }\r\n\r\n    const data = await RES[K.URL_DATA]()\r\n    const page = RES[K.URL_PAGE]\r\n    log(\"routed:\", { page, data })\r\n\r\n    return { [K.URL.DATA]: data, [K.URL.PAGE]: page }\r\n}\r\n\r\nexport const INJECT_HEAD = registerCMD(cmd_inject_head)\r\n\r\nexport const router = {\r\n    [K.CFG_RUTR]: routerCfg,\r\n    [K.RTR_PRFX]: \"census-academy-frontend/\",\r\n    [K.RTR_POST]: INJECT_HEAD,\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport awsconfig from \"./aws-exports\"\r\nimport * as K from \"@-0/keys\"\r\nimport { router } from \"./router\"\r\nimport { Provider } from \"./components\"\r\nimport { configureWith } from \"cope-client-utils\"\r\nimport \"./theme/App.less\"\r\nimport { Button } from \"antd\"\r\n// additional configurations in cope-client-utils provided\r\n// to properly assign ownership to created Nodes/Assets\r\nconfigureWith(awsconfig)\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        CFG={{\r\n            [K.CFG_RUTR]: router,\r\n        }}\r\n    >\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\"),\r\n)\r\n","export * from \"./data\"\r\nexport * from \"./params\"\r\n"],"sourceRoot":""}